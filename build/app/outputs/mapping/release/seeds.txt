com.mapbox.geojson.PointAsCoordinatesTypeAdapter
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.mapbox.android.telemetry.errors.ErrorReporterJobIntentService
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.mapbox.geojson.MultiLineString$GsonTypeAdapter
com.mapbox.geojson.gson.GeoJsonAdapterFactory
com.mapbox.mapboxsdk.style.types.Formatted
androidx.appcompat.widget.ActionBarContextView
androidx.appcompat.widget.ActionMenuView
com.mapbox.geojson.MultiPolygon
com.mapbox.mapboxsdk.style.layers.LineLayer
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionDeleteCallback
kotlinx.coroutines.CoroutineExceptionHandler
com.mapbox.mapboxsdk.Mapbox
com.mapbox.mapboxsdk.maps.NativeMapView
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl
android.support.v4.media.MediaMetadataCompat
com.google.android.material.bottomsheet.BottomSheetBehavior
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter
androidx.preference.Preference
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$1
com.mapbox.mapboxsdk.style.sources.CannotAddSourceException
com.google.android.gms.common.GoogleApiAvailability
com.mapbox.mapboxsdk.plugins.offline.ui.OfflineActivity
com.google.android.gms.common.util.DynamiteApi
com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback
androidx.startup.InitializationProvider
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
com.mapbox.geojson.gson.GeometryGeoJson
com.google.android.material.snackbar.Snackbar$SnackbarLayout
io.flutter.view.AccessibilityViewEmbedder
androidx.preference.DropDownPreference
com.google.gson.JsonElement
com.google.android.gms.location.LocationServices
com.google.android.material.floatingactionbutton.FloatingActionButton
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory
com.mapbox.mapboxsdk.plugins.offline.ui.RegionSelectionFragment
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.google.android.material.internal.CheckableImageButton
com.google.android.material.button.MaterialButtonToggleGroup
com.mapbox.mapboxsdk.style.layers.HeatmapLayer
com.mapbox.geojson.GeometryAdapterFactory
com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback
com.mapbox.mapboxsdk.snapshotter.MapSnapshot
com.mapbox.mapboxsdk.style.sources.ImageSource
androidx.activity.ComponentActivity$3
com.google.android.material.snackbar.SnackbarContentLayout
com.mapbox.android.telemetry.VisionObjectDetectionEvent
androidx.preference.TwoStatePreference
com.mapbox.android.telemetry.LocationEvent
androidx.viewpager2.adapter.FragmentStateAdapter$5
androidx.appcompat.widget.FitWindowsFrameLayout
com.google.android.material.theme.MaterialComponentsViewInflater
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.mapbox.mapboxsdk.style.layers.RasterLayer
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter
com.mapbox.geojson.Feature$GsonTypeAdapter
com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback
com.google.android.material.textfield.TextInputEditText
com.mapbox.mapboxsdk.maps.Value
io.flutter.plugins.GeneratedPluginRegistrant
com.mapbox.mapboxsdk.style.layers.CannotAddLayerException
androidx.media.AudioAttributesCompatParcelizer
com.mapbox.mapboxsdk.annotations.BasePointCollection
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.google.android.material.button.MaterialButton
com.google.android.material.timepicker.ClockFaceView
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.google.gson.JsonPrimitive
android.support.v4.media.MediaDescriptionCompat
androidx.preference.UnPressableLinearLayout
androidx.versionedparcelable.CustomVersionedParcelable
com.mapbox.mapboxsdk.maps.Observer
com.baseflow.geolocator.GeolocatorLocationService
androidx.activity.result.ActivityResultRegistry$1
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent
com.mapbox.android.telemetry.AppUserTurnstile
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.rarelane.merchforce.merchforce.MainActivity
com.mapbox.geojson.utils.PolylineUtils
com.mapbox.mapboxsdk.net.NativeConnectivityListener
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation
com.mapbox.geojson.gson.GeoJsonAdapterFactory$GeoJsonAdapterFactoryIml
com.google.android.material.transformation.ExpandableTransformationBehavior
com.google.android.material.datepicker.MaterialCalendarGridView
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent
com.google.android.material.appbar.MaterialToolbar
androidx.lifecycle.SavedStateHandleController$1
com.google.android.material.textview.MaterialTextView
androidx.preference.SwitchPreferenceCompat
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter
com.mapbox.mapboxsdk.style.layers.Layer
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.mapbox.mapboxsdk.plugins.offline.offline.OfflineDownloadService
androidx.media.AudioAttributesImpl
androidx.core.graphics.drawable.IconCompatParcelizer
com.mapbox.mapboxgl.MapboxMapController
com.mapbox.android.accounts.v1.AccountsConstants
androidx.constraintlayout.widget.Barrier
androidx.lifecycle.LifecycleCoroutineScopeImpl
androidx.preference.PreferenceCategory
com.google.android.material.transformation.FabTransformationBehavior
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver
com.google.android.material.datepicker.MaterialDatePicker
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent
com.mapbox.mapboxsdk.maps.ObservableEvent
com.mapbox.mapboxsdk.offline.OfflineRegionError
com.google.android.gms.common.api.internal.LifecycleCallback
com.mapbox.geojson.Polygon$GsonTypeAdapter
androidx.lifecycle.DefaultLifecycleObserver
androidx.transition.FragmentTransitionSupport
com.google.android.material.textfield.TextInputLayout
androidx.lifecycle.Lifecycling$1
androidx.fragment.app.FragmentManager$6
androidx.savedstate.SavedStateRegistry$1
com.google.gson.JsonObject
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.mapbox.mapboxsdk.maps.renderer.MapRendererScheduler
androidx.preference.CheckBoxPreference
com.google.android.material.chip.Chip
com.mapbox.mapboxsdk.maps.MapView
com.mapbox.mapboxsdk.utils.StringUtils
androidx.preference.PreferenceScreen
com.mapbox.geojson.BaseGeometryTypeAdapter
com.mapbox.geojson.LineString
com.mapbox.mapboxsdk.annotations.BubbleLayout
com.google.android.gms.common.SupportErrorDialogFragment
com.mapbox.android.telemetry.KeyValue
io.flutter.embedding.engine.FlutterJNI
androidx.emoji2.text.EmojiCompatInitializer
androidx.preference.DialogPreference
android.support.v4.media.MediaBrowserCompat$MediaItem
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent
hamza.dali.flutter_osm_plugin.network.ApiClient
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.android.material.transformation.FabTransformationScrimBehavior
com.mapbox.mapboxsdk.style.layers.CustomLayer
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.mapbox.mapboxsdk.style.layers.CircleLayer
com.mapbox.geojson.LineString$GsonTypeAdapter
androidx.appcompat.widget.ButtonBarLayout
com.mapbox.mapboxsdk.location.LocationIndicatorLayer
com.mapbox.geojson.GeoJson
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.core.app.RemoteActionCompatParcelizer
com.mapbox.mapboxsdk.module.telemetry.PhoneState
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.flutter.embedding.android.FlutterSplashView$SavedState
kotlinx.coroutines.android.AndroidDispatcherFactory
android.support.v4.media.session.MediaSessionCompat$Token
com.google.android.gms.common.annotation.KeepName
com.mapbox.mapboxsdk.offline.OfflineRegionStatus
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter
com.google.android.material.behavior.SwipeDismissBehavior
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.preference.SeekBarPreference
androidx.core.app.CoreComponentFactory
com.mapbox.android.telemetry.provider.MapboxTelemetryInitProvider
com.mapbox.geojson.Feature
com.mapbox.geojson.constants.GeoJsonConstants
androidx.viewpager2.adapter.FragmentStateAdapter$2
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.mapbox.geojson.FeatureCollection
com.mapbox.mapboxsdk.log.Logger
androidx.recyclerview.widget.GridLayoutManager
com.mapbox.mapboxsdk.style.sources.RasterSource
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.fasterxml.jackson.databind.ext.Java7SupportImpl
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.annotation.Keep
androidx.preference.internal.PreferenceImageView
com.mapbox.geojson.CoordinateContainer
io.flutter.embedding.engine.FlutterOverlaySurface
com.mapbox.mapboxsdk.annotations.Marker
androidx.appcompat.widget.ViewStubCompat
androidx.appcompat.widget.SwitchCompat
androidx.appcompat.widget.ContentFrameLayout
hamza.dali.flutter_osm_plugin.FlutterOsmView
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$2
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
com.mapbox.mapboxsdk.offline.OfflineRegion
com.mapbox.mapboxsdk.style.layers.BackgroundLayer
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition
androidx.activity.ComponentActivity$5
androidx.savedstate.Recreator
com.google.android.gms.location.LocationAvailability
com.mapbox.geojson.shifter.CoordinateShifterManager$1
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter
androidx.fragment.app.Fragment$5
com.mapbox.geojson.BoundingBox
androidx.appcompat.view.menu.ListMenuItemView
androidx.fragment.app.DialogFragment
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionUpdateMetadataCallback
com.mapbox.geojson.MultiLineString
android.support.v4.graphics.drawable.IconCompatParcelizer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.mapbox.mapboxsdk.style.layers.HillshadeLayer
com.mapbox.mapboxsdk.style.sources.UnknownSource
com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.lifecycle.SingleGeneratedAdapterObserver
com.google.gson.JsonArray
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.mapbox.mapboxsdk.camera.CameraPosition
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.mapbox.mapboxsdk.style.sources.GeoJsonSource
androidx.coordinatorlayout.widget.CoordinatorLayout
com.mapbox.geojson.shifter.CoordinateShifterManager
androidx.activity.ImmLeaksCleaner
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.google.android.gms.common.api.Scope
androidx.activity.ComponentActivity$4
com.mapbox.mapboxsdk.maps.renderer.MapRenderer
com.google.android.gms.common.internal.ReflectedParcelable
com.google.android.gms.common.api.internal.BasePendingResult
androidx.core.graphics.drawable.IconCompat
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition
com.google.android.gms.common.api.Status
androidx.media.AudioAttributesImplApi21Parcelizer
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionStatusCallback
com.mapbox.mapboxsdk.storage.FileSource
com.mapbox.geojson.MultiPoint
androidx.preference.MultiSelectListPreference
androidx.lifecycle.RepeatOnLifecycleKt$repeatOnLifecycle$3$1$1$1
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback
com.mapbox.mapboxsdk.offline.OfflineManager
com.google.android.material.datepicker.MaterialCalendar
com.google.android.gms.location.LocationRequest
com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback
com.google.android.material.timepicker.ChipTextInputComboView
com.google.android.gms.auth.api.signin.GoogleSignInAccount
androidx.preference.SwitchPreference
com.google.android.material.timepicker.TimePickerView
com.mapbox.mapboxsdk.annotations.Polyline
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory$1
com.mapbox.android.telemetry.VisionEvent
com.mapbox.mapboxsdk.storage.FileSource$ResourceTransformCallback
com.mapbox.mapboxsdk.geometry.LatLng
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.mapbox.mapboxsdk.offline.OfflineManager$PrefetchAmbientCacheCallback
androidx.versionedparcelable.ParcelImpl
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
androidx.appcompat.widget.ActionBarContainer
androidx.constraintlayout.widget.Guideline
android.support.v4.media.session.ParcelableVolumeInfo
com.mapbox.mapboxsdk.geometry.LatLngBounds
com.mapbox.mapboxsdk.style.layers.SymbolLayer
io.flutter.view.FlutterCallbackInformation
com.mapbox.mapboxsdk.style.sources.VectorSource
com.mapbox.geojson.Point$GsonTypeAdapter
com.mapbox.geojson.Polygon
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory
android.support.v4.media.RatingCompat
com.mapbox.android.telemetry.MapboxTelemetryService
com.mapbox.mapboxsdk.http.NativeHttpRequest
com.google.android.material.transformation.ExpandableBehavior
androidx.emoji2.text.EmojiCompatInitializer$1
androidx.media.AudioAttributesImplBase
com.mapbox.mapboxsdk.style.types.FormattedSection
com.mapbox.mapboxsdk.geometry.ProjectedMeters
com.google.android.material.internal.NavigationMenuView
androidx.constraintlayout.widget.ConstraintLayout
com.mapbox.geojson.gson.BoundingBoxTypeAdapter
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter
androidx.lifecycle.FullLifecycleObserverAdapter
com.mapbox.geojson.utils.GeoJsonUtils
com.google.android.gms.common.api.GoogleApiActivity
com.google.android.material.timepicker.ClockHandView
com.mapbox.geojson.Point
com.mapbox.mapboxsdk.geometry.LatLngQuad
kotlin.internal.jdk7.JDK7PlatformImplementations
androidx.preference.ListPreference
com.google.android.material.datepicker.MaterialTextInputPicker
kotlinx.coroutines.internal.MainDispatcherFactory
androidx.media.AudioAttributesImplBaseParcelizer
androidx.cardview.widget.CardView
androidx.lifecycle.ProcessLifecycleInitializer
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter
androidx.fragment.app.FragmentContainerView
com.mapbox.geojson.GeometryCollection
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionInvalidateCallback
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent
androidx.core.widget.NestedScrollView
android.support.v4.media.session.PlaybackStateCompat
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.mapbox.mapboxsdk.style.sources.RasterDemSource
com.mapbox.mapboxsdk.style.layers.FillLayer
com.google.android.material.internal.NavigationMenuItemView
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.material.chip.ChipGroup
com.google.android.material.internal.BaselineLayout
androidx.recyclerview.widget.RecyclerView
androidx.appcompat.view.menu.ExpandedMenuView
androidx.appcompat.app.AlertController$RecycleListView
androidx.lifecycle.SavedStateHandleController
kotlin.internal.jdk8.JDK8PlatformImplementations
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$2$observer$1
com.mapbox.mapboxsdk.style.layers.TransitionOptions
androidx.appcompat.widget.Toolbar
com.mapbox.mapboxsdk.annotations.Polygon
androidx.window.layout.SidecarCompat$TranslatingCallback
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.core.app.RemoteActionCompat
androidx.recyclerview.widget.LinearLayoutManager
com.mapbox.android.accounts.v1.MapboxAccounts
com.mapbox.mapboxsdk.style.sources.Source
com.mapbox.geojson.shifter.CoordinateShifter
androidx.media.AudioAttributesCompat
com.google.android.material.transformation.FabTransformationSheetBehavior
com.mapbox.geojson.exception.GeoJsonException
io.flutter.plugins.urllauncher.WebViewActivity
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter
androidx.appcompat.widget.AlertDialogLayout
com.squareup.picasso.PicassoProvider
androidx.appcompat.widget.DialogTitle
com.mapbox.geojson.MultiPoint$GsonTypeAdapter
com.mapbox.android.telemetry.CrashEvent
com.mapbox.mapboxsdk.style.light.Light
com.mapbox.geojson.BaseCoordinatesTypeAdapter
com.mapbox.mapboxsdk.offline.CacheAreaDefinition
com.google.android.gms.common.api.internal.zzc
com.google.android.gms.location.LocationResult
com.mapbox.mapboxsdk.style.light.Position
com.mapbox.geojson.Geometry
com.lyokone.location.FlutterLocationService
androidx.preference.EditTextPreference
androidx.preference.PreferenceGroup
com.mapbox.android.telemetry.Attachment
com.mapbox.mapboxsdk.maps.Image
com.google.android.material.appbar.AppBarLayout$BaseBehavior
androidx.lifecycle.LifecycleController$observer$1
androidx.media.AudioAttributesImplApi21
com.google.android.material.appbar.AppBarLayout$Behavior
com.google.android.material.appbar.AppBarLayout
androidx.appcompat.widget.SearchView
androidx.appcompat.view.menu.ActionMenuItemView
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double distance_from_camera
com.mapbox.android.telemetry.LocationEvent: java.lang.String applicationState
com.mapbox.mapboxsdk.offline.CacheAreaDefinition: boolean includeIdeographs
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.Mapbox INSTANCE
com.mapbox.mapboxsdk.camera.CameraPosition: double zoom
com.mapbox.geojson.BaseGeometryTypeAdapter: com.google.gson.Gson gson
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: android.content.Context appContext
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String operatingSystem
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory$1: com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory this$0
com.mapbox.android.telemetry.LocationEvent: java.lang.String operatingSystem
com.mapbox.android.telemetry.LocationEvent: java.lang.String sessionId
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String model
com.google.android.gms.internal.location.zzo: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String userId
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String created
com.mapbox.mapboxsdk.camera.CameraPosition: com.mapbox.mapboxsdk.geometry.LatLng target
com.mapbox.android.telemetry.VisionEvent: android.os.Parcelable$Creator CREATOR
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.mapbox.android.telemetry.LocationEvent: java.lang.String source
com.mapbox.android.telemetry.VisionEvent: java.lang.String VIS_GENERAL
com.mapbox.android.telemetry.VisionEvent: java.lang.String name
com.mapbox.mapboxsdk.offline.CacheAreaDefinition: float pixelRatio
com.mapbox.mapboxsdk.http.NativeHttpRequest: long nativePtr
com.mapbox.geojson.GeometryCollection: java.lang.String type
com.mapbox.geojson.MultiPolygon: java.lang.String TYPE
com.mapbox.geojson.constants.GeoJsonConstants: double MAX_LONGITUDE
com.mapbox.geojson.Point: java.lang.String TYPE
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_pos_height
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.BoundingBox bbox
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: java.lang.Object value
com.mapbox.geojson.MultiPolygon: java.util.List coordinates
com.mapbox.mapboxsdk.log.Logger: int logLevel
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String clazz
com.mapbox.android.telemetry.CrashEvent: java.lang.String stackTrace
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.annotations.Marker: com.mapbox.mapboxsdk.geometry.LatLng position
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String sign_value
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.BoundingBox bbox
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: long timeElapsed
com.mapbox.mapboxsdk.module.telemetry.PhoneState: int batteryLevel
com.mapbox.mapboxsdk.style.layers.Layer: boolean invalidated
com.mapbox.mapboxsdk.style.layers.TransitionOptions: long delay
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.gson.reflect.TypeToken: java.lang.reflect.Type type
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.Image: byte[] buffer
com.mapbox.mapboxsdk.Mapbox: java.lang.String accessToken
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.mapbox.geojson.MultiPoint: java.util.List coordinates
com.mapbox.geojson.Point: com.mapbox.geojson.BoundingBox bbox
com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom: com.mapbox.mapboxsdk.geometry.LatLngBounds bounds
com.mapbox.geojson.constants.GeoJsonConstants: double MIN_LATITUDE
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_size_width
com.mapbox.geojson.BaseGeometryTypeAdapter: com.google.gson.TypeAdapter boundingBoxAdapter
com.google.android.gms.internal.location.zzm: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.LocationEvent: java.lang.String OPERATING_SYSTEM
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: float pixelRatio
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom: double zoom
com.mapbox.android.accounts.v1.AccountsConstants: java.lang.String KEY_META_DATA_MANAGE_SKU
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.mapbox.mapboxsdk.geometry.VisibleRegion: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: com.google.gson.JsonObject metadata
com.mapbox.mapboxsdk.maps.Observer: java.util.concurrent.atomic.AtomicInteger idCounter
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_lon
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.google.gson.Gson gson
com.mapbox.mapboxsdk.maps.Image: float pixelRatio
com.mapbox.mapboxsdk.http.NativeHttpRequest: com.mapbox.mapboxsdk.http.HttpRequest httpRequest
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String device
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.BoundingBox bbox
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_NAVIGATION_MAUS
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.mapbox.android.telemetry.CrashEvent: java.lang.String device
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String accuracyAuthorization
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.mapbox.android.telemetry.Attachment: java.util.List attachments
com.mapbox.android.accounts.v1.AccountsConstants: boolean DEFAULT_TOKEN_MANAGE_SKU
com.mapbox.mapboxsdk.log.Logger: int INFO
com.mapbox.mapboxsdk.log.Logger: com.mapbox.mapboxsdk.log.LoggerDefinition logger
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean pluggedIn
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: double minZoom
com.google.android.gms.location.zzaj: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.VisionEvent: java.util.HashMap contents
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String sdkIdentifier
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_MAPS_MAUS
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: com.mapbox.mapboxsdk.maps.MapboxMap$OnFpsChangedListener onFpsChangedListener
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.VisionObjectDetectionEvent: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.Double minZoom
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.maps.TelemetryDefinition telemetry
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String created
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean wifi
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: boolean includeIdeographs
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.AccountsManager accounts
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.mapbox.android.telemetry.CrashEvent: java.lang.String sdkVersion
com.mapbox.android.telemetry.LocationEvent: java.lang.Double altitude
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.gson.JsonObject: com.google.gson.internal.LinkedTreeMap members
com.mapbox.mapboxsdk.style.light.Position: float polarAngle
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: float pixelRatio
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.mapbox.geojson.Feature: com.google.gson.JsonObject properties
com.mapbox.geojson.utils.PolylineUtils: boolean SIMPLIFY_DEFAULT_HIGHEST_QUALITY
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: com.mapbox.mapboxsdk.geometry.LatLngBounds bounds
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_NAVIGATION_TRIPS
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_size_height
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String event
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
org.osmdroid.util.BoundingBox: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.storage.FileSource: long nativePtr
com.mapbox.geojson.MultiLineString: java.lang.String TYPE
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.google.gson.TypeAdapter listFeatureAdapter
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.mapbox.mapboxsdk.geometry.LatLngBounds: double longitudeWest
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String PERFORMANCE_TRACE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.mapbox.mapboxsdk.maps.Image: boolean sdf
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.mapbox.mapboxsdk.annotations.BasePointCollection: java.util.List points
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String sdkVersion
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.android.gms.common.internal.zzb: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.mapbox.mapboxsdk.maps.Image: float[] stretchX
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.mapbox.mapboxsdk.geometry.LatLngBounds: double latitudeNorth
com.mapbox.android.telemetry.CrashEvent: java.lang.String appId
com.mapbox.android.telemetry.CrashEvent: java.lang.String stackTraceHash
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: long nativePtr
com.mapbox.mapboxsdk.style.sources.Source: long nativePtr
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
com.mapbox.android.telemetry.Attachment: java.lang.String event
com.mapbox.mapboxsdk.style.layers.TransitionOptions: boolean enablePlacementTransitions
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String EVENT_NAME
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.Double minZoom
org.osmdroid.util.GeoPoint: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.camera.CameraPosition: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.LocationEvent: double longitude
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String operatingSystem
com.mapbox.geojson.utils.GeoJsonUtils: long MAX_DOUBLE_TO_ROUND
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$2: com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent this$0
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: java.lang.String TAG
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: java.lang.String styleURL
com.mapbox.mapboxsdk.log.Logger: int NONE
com.mapbox.android.telemetry.CrashEvent: java.lang.String isSilent
com.google.gson.JsonArray: java.util.List elements
com.mapbox.mapboxsdk.maps.Image: java.lang.String name
com.mapbox.mapboxsdk.maps.ObservableEvent: com.mapbox.mapboxsdk.maps.Value data
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String[] fontStack
com.mapbox.android.telemetry.CrashEvent: java.lang.String appVersion
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: com.mapbox.android.telemetry.MapboxTelemetry telemetry
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.DispatchedCoroutine: int _decision
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.mapbox.geojson.Feature: java.lang.String TYPE
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String VIS_OBJECT_DETECTION
kotlinx.coroutines.channels.ArrayChannel: int size
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.mapbox.geojson.Feature: com.mapbox.geojson.Geometry geometry
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: int batteryLevel
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: double maxZoom
com.google.android.gms.common.internal.ResolveAccountRequest: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.annotations.Polyline: int color
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String state
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.List attributes
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: boolean maintainType
com.google.android.gms.internal.location.zzbf: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.CacheAreaDefinition: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.CrashEvent: java.util.List customData
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String cellularNetworkType
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double vehicle_lat
com.mapbox.android.telemetry.KeyValue: java.lang.String value
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String carrier
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.AppUserTurnstile: boolean enabledTelemetry
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String shapeForOfflineRegion
com.mapbox.geojson.Polygon: java.lang.String type
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.mapbox.mapboxsdk.maps.Observer: int id
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double object_lat
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.List counters
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_VISION_MAUS
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.BoundingBox bbox
com.mapbox.mapboxsdk.net.NativeConnectivityListener: long nativePtr
com.mapbox.mapboxsdk.annotations.Polygon: int strokeColor
com.mapbox.mapboxsdk.style.light.Position: float radialCoordinate
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: long numberOfTilesCompleted
com.mapbox.mapboxsdk.geometry.LatLngQuad: com.mapbox.mapboxsdk.geometry.LatLng bottomLeft
com.mapbox.mapboxsdk.geometry.LatLng: double longitude
com.mapbox.android.telemetry.CrashEvent: java.lang.String event
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.shifter.CoordinateShifterManager: com.mapbox.geojson.shifter.CoordinateShifter coordinateShifter
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.NativeMapView: long nativePtr
com.google.android.gms.internal.location.zzad: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.shifter.CoordinateShifterManager: com.mapbox.geojson.shifter.CoordinateShifter DEFAULT
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.mapbox.geojson.Point: java.util.List coordinates
com.mapbox.mapboxsdk.annotations.BasePointCollection: float alpha
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.LineString: java.lang.String TYPE
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.TypeAdapter boundingBoxTypeAdapter
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.Gson gson
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.mapbox.mapboxsdk.geometry.ProjectedMeters: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
org.osmdroid.bonuspack.routing.RoadLeg: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.constants.GeoJsonConstants: double MAX_LATITUDE
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.Point northeast
com.mapbox.geojson.MultiLineString: java.lang.String type
com.mapbox.android.telemetry.KeyValue: java.lang.String name
com.google.android.gms.location.zzj: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.Image: float[] content
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String APPLICATION_CONTEXT_CANT_BE_NULL
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String sessionId
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.mapbox.mapboxsdk.style.layers.Layer: long nativePtr
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String orientation
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.BoundingBox bbox
com.mapbox.mapboxsdk.log.Logger: int ERROR
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float resolution
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.Attachment: java.lang.String VIS_ATTACHMENT
com.mapbox.android.telemetry.CrashEvent: java.lang.String created
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.mapbox.android.telemetry.CrashEvent: java.lang.String model
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.TypeAdapter stringTypeAdapter
com.mapbox.mapboxsdk.geometry.LatLngQuad: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.log.Logger: com.mapbox.mapboxsdk.log.LoggerDefinition DEFAULT
com.mapbox.android.telemetry.LocationEvent: java.lang.String created
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: long nativePtr
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
com.mapbox.geojson.GeometryCollection: java.lang.String TYPE
kotlinx.coroutines.InvokeOnCancelling: int _invoked
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String TAG
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: boolean includeIdeographs
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: double expectedRenderTime
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: float resolution
com.google.android.gms.signin.internal.zaj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.Parcelable$Creator CREATOR
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String APP_USER_TURNSTILE
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String EVENT_NAME
com.mapbox.android.telemetry.LocationEvent: java.lang.String SOURCE_MAPBOX
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory$1: java.util.Map val$labelToDelegate
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.Double maxZoom
com.mapbox.android.telemetry.LocationEvent: java.lang.String event
com.mapbox.mapboxsdk.log.Logger: int DEBUG
com.mapbox.mapboxsdk.camera.CameraPosition: double[] padding
com.google.android.gms.signin.internal.zah: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: double minZoom
com.mapbox.geojson.GeometryAdapterFactory: com.google.gson.TypeAdapterFactory geometryTypeFactory
com.mapbox.mapboxsdk.geometry.LatLng: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.FeatureCollection: java.util.List features
com.mapbox.android.accounts.v1.AccountsConstants: java.lang.String KEY_PREFERENCE_MAPS_SKU_TOKEN
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String sdkIdentifier
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: float accessibilityFontScale
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
com.mapbox.android.telemetry.LocationEvent: double latitude
com.mapbox.mapboxsdk.log.Logger: int VERBOSE
com.google.gson.reflect.TypeToken: int hashCode
com.mapbox.geojson.MultiPoint: java.lang.String type
com.mapbox.mapboxsdk.offline.OfflineRegion: long nativePtr
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.mapbox.mapboxsdk.offline.CacheAreaDefinition: com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom[] boundsZoomList
com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom: android.os.Parcelable$Creator CREATOR
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.TypeAdapter geometryTypeAdapter
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.CrashEvent: java.lang.String threadDetails
com.mapbox.geojson.BaseGeometryTypeAdapter: com.google.gson.TypeAdapter coordinatesAdapter
com.mapbox.geojson.Point: java.lang.String type
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.google.gson.TypeAdapter listGeometryAdapter
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.Image: int width
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: long sizeOfResourcesCompleted
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String skuId
com.mapbox.mapboxsdk.geometry.LatLngBounds: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.geometry.LatLng: double latitude
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.mapbox.android.telemetry.LocationEvent: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.LineString: com.mapbox.geojson.BoundingBox bbox
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.mapbox.mapboxsdk.style.light.Position: float azimuthalAngle
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String textColor
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.google.gson.TypeAdapter boundingBoxAdapter
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation ORIENTATION_LANDSCAPE
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.google.gson.TypeAdapter boundingBoxTypeAdapter
com.mapbox.android.telemetry.CrashEvent: java.lang.String sdkIdentifier
com.mapbox.geojson.MultiPoint: java.lang.String TYPE
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.mapbox.mapboxsdk.offline.CacheAreaDefinition: java.lang.String styleURL
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: java.lang.String orientation
com.mapbox.geojson.FeatureCollection: java.lang.String TYPE
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.BasePendingResult$zaa mResultGuardian
com.mapbox.android.telemetry.AppUserTurnstile: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.constants.GeoJsonConstants: double MIN_LONGITUDE
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double vehicle_lon
kotlinx.coroutines.CompletedExceptionally: int _handled
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String sdkVersion
com.mapbox.geojson.BaseGeometryTypeAdapter: com.google.gson.TypeAdapter stringAdapter
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.google.gson.TypeAdapter stringTypeAdapter
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String event
com.google.gson.JsonPrimitive: java.lang.Object value
com.mapbox.mapboxsdk.location.LocationComponentOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.location.zzbd: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.mapbox.geojson.LineString: java.lang.String type
com.mapbox.mapboxsdk.net.NativeConnectivityListener: boolean invalidated
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String SKU_ID_VISION_FLEET_MAUS
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.mapbox.geojson.LineString: java.util.List coordinates
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.mapbox.android.telemetry.LocationEvent: java.lang.String LOCATION
com.mapbox.mapboxsdk.style.light.Light: long nativePtr
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation ORIENTATION_PORTRAIT
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String styleURL
com.mapbox.geojson.utils.PolylineUtils: double SIMPLIFY_DEFAULT_TOLERANCE
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String created
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.Polygon: java.lang.String TYPE
com.mapbox.geojson.MultiLineString: java.util.List coordinates
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float accessibilityFontScale
com.mapbox.android.telemetry.Event: java.util.EnumSet visionEventTypes
com.mapbox.mapboxsdk.log.Logger: int WARN
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.ObservableEvent: java.util.Date end
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
org.osmdroid.bonuspack.routing.Road: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.mapbox.mapboxsdk.annotations.Polyline: float width
com.mapbox.mapboxsdk.style.types.Formatted: com.mapbox.mapboxsdk.style.types.FormattedSection[] formattedSections
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String created
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation[] $VALUES
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory$1: java.util.Map val$subtypeToDelegate
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.geometry.LatLngQuad: com.mapbox.mapboxsdk.geometry.LatLng topLeft
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
org.osmdroid.bonuspack.routing.RoadNode: android.os.Parcelable$Creator CREATOR
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.Double maxZoom
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: java.lang.Class baseType
com.mapbox.geojson.utils.GeoJsonUtils: double ROUND_PRECISION
com.mapbox.mapboxsdk.annotations.Marker: java.lang.String iconId
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.maps.MapboxMapOptions: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.OfflineManager: long nativePtr
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String userId
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: java.lang.String name
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: java.lang.String styleURL
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.mapbox.mapboxsdk.annotations.Polygon: int fillColor
com.mapbox.mapboxsdk.module.telemetry.PhoneState: int NO_NETWORK
com.mapbox.mapboxsdk.maps.ObservableEvent: java.lang.String type
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.mapbox.mapboxsdk.geometry.LatLngBounds: double longitudeEast
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.GeometryCollection: java.util.List geometries
com.mapbox.mapboxsdk.Mapbox: android.content.Context context
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.Point southwest
com.mapbox.mapboxsdk.Mapbox: java.lang.String TAG
com.mapbox.geojson.MultiPolygon: java.lang.String type
com.mapbox.android.telemetry.CrashEvent: java.lang.String osVersion
com.mapbox.mapboxsdk.module.telemetry.PhoneState: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation orientation
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String text
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
com.google.android.gms.location.zzae: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: com.mapbox.geojson.Geometry geometry
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String carrier
com.mapbox.android.telemetry.VisionEvent: java.lang.String event
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.FeatureCollection: java.lang.String type
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String NO_CARRIER
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.mapbox.geojson.Polygon: com.mapbox.geojson.BoundingBox bbox
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
com.mapbox.android.telemetry.Attachment: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String EVENT_NAME
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$1: com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent this$0
com.mapbox.mapboxsdk.style.layers.TransitionOptions: long duration
com.mapbox.mapboxsdk.maps.Image: int height
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String OPERATING_SYSTEM
com.mapbox.geojson.Feature: com.mapbox.geojson.BoundingBox bbox
com.google.gson.reflect.TypeToken: java.lang.Class rawType
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.mapbox.mapboxsdk.maps.ObservableEvent: java.util.Date begin
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.ModuleProvider moduleProvider
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String styleURL
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String cellularNetworkType
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.mapbox.mapboxsdk.geometry.LatLngQuad: com.mapbox.mapboxsdk.geometry.LatLng bottomRight
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: long nativePtr
com.mapbox.geojson.Feature$GsonTypeAdapter: com.google.gson.TypeAdapter jsonObjectTypeAdapter
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.Number fontScale
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: long nativePtr
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.http.NativeHttpRequest: java.util.concurrent.locks.ReentrantLock lock
kotlinx.coroutines.CancelledContinuation: int _resumed
com.mapbox.mapboxsdk.maps.Image: float[] stretchY
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
com.mapbox.mapboxsdk.geometry.LatLngBounds: double latitudeSouth
com.mapbox.mapboxsdk.camera.CameraPosition: double tilt
com.mapbox.geojson.Polygon: java.util.List coordinates
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String shapeForOfflineRegion
com.mapbox.mapboxsdk.style.sources.Source: boolean detached
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.mapbox.mapboxsdk.maps.Value: java.lang.Object contents
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.mapbox.mapboxsdk.camera.CameraPosition: double bearing
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String model
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: double maxZoom
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.mapbox.mapboxsdk.annotations.Polygon: java.util.List holes
com.mapbox.android.telemetry.LocationEvent: java.lang.Float accuracy
com.mapbox.geojson.Feature: java.lang.String id
com.mapbox.mapboxsdk.geometry.LatLngQuad: com.mapbox.mapboxsdk.geometry.LatLng topRight
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean pluggedIn
com.mapbox.geojson.Feature: java.lang.String type
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean wifi
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String event
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.google.gson.Gson gson
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.mapbox.android.accounts.v1.AccountsConstants: java.lang.String MAPBOX_SHARED_PREFERENCES
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.google.gson.TypeAdapter stringAdapter
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: OfflineGeometryRegionDefinition(java.lang.String,com.mapbox.geojson.Geometry,double,double,float)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFinishRenderingFrame(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplify(java.util.List,double,boolean)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.mapbox.android.telemetry.CrashEvent: CrashEvent(java.lang.String,java.lang.String)
com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion: com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] values()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextOpacityTransition(long,long)
com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] values()
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetTopOffsetPixelsForAnnotationSymbol(java.lang.String)
com.mapbox.mapboxsdk.storage.FileSource: boolean isActivated()
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent buildMapLoadEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState)
org.osmdroid.views.MapView: int getMapCenterOffsetY()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback: void onError(java.lang.String)
com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextMaxWidth()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getDistanceFromCamera()
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.BoundingBox bbox()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.mapbox.geojson.gson.GeoJsonAdapterFactory$GeoJsonAdapterFactoryIml: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: MapRendererRunnable(long)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: int hashCode()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
com.mapbox.geojson.Polygon: java.lang.Object coordinates()
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.Mapbox getInstance(android.content.Context,java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineBlurTransition(long,long)
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.google.gson.JsonObject,com.mapbox.geojson.BoundingBox)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.mapbox.mapboxsdk.offline.OfflineManager: void putResourceWithUrl(java.lang.String,byte[],long,long,java.lang.String,boolean)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onAppUserTurnstileEvent()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.Feature: void addStringProperty(java.lang.String,java.lang.String)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.google.android.material.chip.Chip: void setChipTextResource(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature valueOf(java.lang.String)
com.mapbox.mapboxsdk.storage.FileSource: void setResourceCachePath(java.lang.String,com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback)
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineGapWidthTransition(long,long)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.camera.CameraPosition nativeGetCameraForLatLngBounds(com.mapbox.mapboxsdk.geometry.LatLngBounds,double,double,double,double,double,double)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromGeometry(com.mapbox.geojson.Geometry,com.mapbox.geojson.BoundingBox)
com.google.android.material.card.MaterialCardView: void setCheckedIconGravity(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean isPluggedIn()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.mapbox.mapboxsdk.maps.MapView: float getPixelRatio()
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCirclePitchScale()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: void setPreserveEGLContextOnPause(boolean)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.google.android.material.chip.Chip: void setIconStartPadding(float)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$BufferFormat: com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$BufferFormat[] values()
com.mapbox.android.telemetry.LocationEvent: double getLongitude()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
org.osmdroid.views.MapView: void setTileSystem(org.osmdroid.util.TileSystem)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onSnapshotReady(com.mapbox.mapboxsdk.snapshotter.MapSnapshot)
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
com.mapbox.android.telemetry.AppStateUtils$ActivityState: com.mapbox.android.telemetry.AppStateUtils$ActivityState valueOf(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean equals(java.lang.Object)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeLatLngsForPixels(double[],double[],float)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromPolygon(com.mapbox.geojson.Polygon)
com.google.gson.JsonPrimitive: short getAsShort()
com.mapbox.mapboxsdk.maps.NativeMapView: void onSnapshotReady(android.graphics.Bitmap)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconAllowOverlap()
com.mapbox.mapboxsdk.plugins.offline.ui.OfflineActivity: OfflineActivity()
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIconTint(int)
com.mapbox.android.core.permissions.PermissionsManager$AccuracyAuthorization: com.mapbox.android.core.permissions.PermissionsManager$AccuracyAuthorization[] values()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillPatternTransition()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.geojson.BoundingBox: double east()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeOnSurfaceChanged(int,int)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.mapbox.geojson.Point: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterSaturation()
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent buildOfflineDownloadStartEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,java.lang.Double,java.lang.Double,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeRemoveAnnotations(long[])
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: VisionObjectDetectionEvent(android.os.Parcel)
com.google.gson.JsonPrimitive: int hashCode()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextLetterSpacing()
com.mapbox.geojson.Polygon$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.geojson.Feature: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromLngLats(java.util.List)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.gson.JsonElement: byte getAsByte()
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeFlyTo(double,double,double,long,double,double,double[])
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String getStyleURL()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetBackgroundPatternTransition()
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconHaloWidthTransition(long,long)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.mapbox.android.telemetry.LocationEvent: double getLatitude()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.mapbox.mapboxsdk.style.light.Light: java.lang.String nativeGetAnchor()
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMinPitch()
androidx.startup.InitializationProvider: InitializationProvider()
com.mapbox.geojson.gson.GeometryGeoJson: GeometryGeoJson()
com.mapbox.mapboxsdk.maps.NativeMapView: void onSourceChanged(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeUnsubscribeAll(int)
com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback: void onError(java.lang.String)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectSizeHeight()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.google.gson.JsonElement: java.math.BigDecimal getAsBigDecimal()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineBlurTransition()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.Double getMinZoom()
com.mapbox.geojson.Feature: java.lang.String id()
androidx.preference.DialogPreference: DialogPreference(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.mapbox.mapboxsdk.style.types.Formatted: com.mapbox.mapboxsdk.style.types.FormattedSection[] getFormattedSections()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.mapbox.mapboxsdk.offline.OfflineRegion: void finalize()
com.mapbox.geojson.MultiLineString: java.util.List coordinates()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconHaloBlurTransition()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: void writeToParcel(android.os.Parcel,int)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconHaloColor()
org.osmdroid.views.MapView: void setOverlayManager(org.osmdroid.views.overlay.OverlayManager)
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeatures(java.util.List,com.mapbox.geojson.BoundingBox)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.android.material.chip.Chip: void setMinLines(int)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: java.lang.Object nativeGetBackgroundOpacity()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHillshadeAccentColorTransition()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionTranslateTransition()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionTranslate()
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.mapbox.mapboxsdk.log.Logger: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.mapbox.geojson.LineString$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.mapboxsdk.offline.OfflineManager: void nativePackDatabase(com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetZoom(double,double,double,long)
com.mapbox.mapboxsdk.log.Logger: void w(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.mapbox.mapboxsdk.offline.OfflineManager: long nativePrefetchAmbientCache(com.mapbox.mapboxsdk.offline.CacheAreaDefinition,com.mapbox.mapboxsdk.offline.OfflineManager$PrefetchAmbientCacheCallback)
androidx.preference.SwitchPreferenceCompat: SwitchPreferenceCompat(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineWidthTransition(long,long)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.mapbox.geojson.utils.PolylineUtils: double getSqDist(com.mapbox.geojson.Point,com.mapbox.geojson.Point)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextTransform()
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineTranslate()
com.mapbox.geojson.Point: double latitude()
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromPolygons(java.util.List,com.mapbox.geojson.BoundingBox)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
com.mapbox.mapboxsdk.style.light.Light: void nativeSetPosition(com.mapbox.mapboxsdk.style.light.Position)
com.mapbox.mapboxsdk.maps.renderer.MapRendererScheduler: void queueEvent(java.lang.Runnable)
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.google.gson.JsonArray: float getAsFloat()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionHeightTransition(long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconPitchAlignment()
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFinishLoadingStyle()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.geojson.shifter.CoordinateShifterManager$1: java.util.List shiftLonLatAlt(double,double,double)
com.mapbox.mapboxsdk.maps.Value: Value(boolean)
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleOpacityTransition()
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFinishLoadingMap()
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeAddMarkers(com.mapbox.mapboxsdk.annotations.Marker[])
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.google.gson.JsonArray: com.google.gson.JsonElement set(int,com.google.gson.JsonElement)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionTranslateTransition(long,long)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: int hashCode()
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
androidx.appcompat.widget.SwitchCompat: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] values()
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.offline.OfflineRegion: void invalidateOfflineRegion(com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionInvalidateCallback)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.mapbox.mapboxsdk.net.NativeConnectivityListener: NativeConnectivityListener(long)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.mapbox.mapboxsdk.style.sources.Source: void nativeSetVolatile(java.lang.Boolean)
com.mapbox.mapboxsdk.plugins.offline.ui.RegionSelectionFragment: RegionSelectionFragment()
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetAccuracyRadiusColor()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterBrightnessMax()
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMinZoom()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.mapbox.mapboxsdk.style.types.Formatted: java.lang.Object[] toArray()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
com.mapbox.geojson.GeometryCollection: java.lang.String type()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetPerspectiveCompensation()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetTopImageSize()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetAccuracyRadiusBorderColorTransition(long,long)
com.mapbox.mapboxsdk.maps.ObservableEvent: java.util.Date getBegin()
com.google.gson.JsonArray: void add(java.lang.Character)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.mapbox.mapboxsdk.log.Logger: void setVerbosity(int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.mapbox.android.telemetry.KeyValue: void writeToParcel(android.os.Parcel,int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
org.osmdroid.views.MapView: android.os.Handler getTileRequestCompleteHandler()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.google.gson.JsonElement: short getAsShort()
com.google.android.material.appbar.AppBarLayout: AppBarLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.Layer: float nativeGetMaxZoom()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
com.mapbox.geojson.utils.PolylineUtils: java.lang.String encode(java.util.List,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory of(java.lang.Class)
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleTranslateTransition(long,long)
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMaxPitch()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: GeoJsonSource(long)
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: PointAsCoordinatesTypeAdapter()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
org.osmdroid.views.MapView: org.osmdroid.views.overlay.OverlayManager getOverlayManager()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconTextFit()
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFinishRenderingMap(boolean)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.types.FormattedSection: void setFontScale(java.lang.Number)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.mapbox.mapboxsdk.maps.ObservableEvent: ObservableEvent(java.lang.String,java.util.Date,java.util.Date,com.mapbox.mapboxsdk.maps.Value)
com.mapbox.android.telemetry.AppUserTurnstile: AppUserTurnstile(java.lang.String,java.lang.String,boolean)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.offline.OfflineRegion: OfflineRegion(long,com.mapbox.mapboxsdk.storage.FileSource,long,com.mapbox.mapboxsdk.offline.OfflineRegionDefinition,byte[])
com.mapbox.geojson.MultiPolygon: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.gson.TypeAdapter: com.google.gson.TypeAdapter nullSafe()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionUpdateMetadataCallback: void onError(java.lang.String)
com.mapbox.geojson.BaseCoordinatesTypeAdapter: com.mapbox.geojson.Point readPoint(com.google.gson.stream.JsonReader)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.gson.reflect.TypeToken: boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleOpacityTransition(long,long)
com.google.android.material.card.MaterialCardView: float getRadius()
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
org.osmdroid.views.MapView: org.osmdroid.views.Projection getProjection()
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleStrokeWidthTransition()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextIgnorePlacement()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.mapbox.android.telemetry.VisionEvent: VisionEvent()
com.mapbox.mapboxsdk.style.layers.Layer: void finalize()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.MapView: void setMapStrictModeEnabled(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: com.google.gson.JsonObject initMetaData(java.lang.String)
com.mapbox.mapboxsdk.style.sources.RasterDemSource: void finalize()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.mapbox.mapboxsdk.maps.NativeMapView: android.graphics.Bitmap nativeGetImage(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setWifi(boolean)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextKeepUpright()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: com.mapbox.geojson.MultiLineString read(com.google.gson.stream.JsonReader)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onStart()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.mapbox.android.telemetry.AppUserTurnstile: AppUserTurnstile(android.os.Parcel,com.mapbox.android.telemetry.AppUserTurnstile$1)
org.osmdroid.views.CustomZoomButtonsDisplay$HorizontalPosition: org.osmdroid.views.CustomZoomButtonsDisplay$HorizontalPosition[] values()
com.google.android.material.chip.Chip: void setElevation(float)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetMaxPitch(double)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.mapbox.geojson.BoundingBox: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.mapbox.mapboxsdk.maps.GlyphsRasterizationMode: com.mapbox.mapboxsdk.maps.GlyphsRasterizationMode[] values()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.mapbox.mapboxsdk.maps.Image: Image(byte[],float,java.lang.String,int,int,boolean,float[],float[],float[])
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeIlluminationAnchor()
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextHaloColor()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconRotate()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetAccuracyRadiusColorTransition(long,long)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Boolean isVolatile()
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
org.osmdroid.views.MapView: java.util.List getOverlays()
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
com.squareup.picasso.NetworkPolicy: com.squareup.picasso.NetworkPolicy[] values()
com.mapbox.mapboxsdk.style.sources.VectorSource: VectorSource(long)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeMoveBy(double,double,long)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
com.mapbox.geojson.Feature: java.lang.String toString()
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromPolygon(com.mapbox.geojson.Polygon,com.mapbox.geojson.BoundingBox)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.card.MaterialCardView: void setRadius(float)
com.mapbox.geojson.Point$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.android.material.button.MaterialButton: int getInsetTop()
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetBearingImageSize()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: VisionObjectDetectionEvent(android.os.Parcel,com.mapbox.android.telemetry.VisionObjectDetectionEvent$1)
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.style.layers.LineLayer: void finalize()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetAccuracyRadiusBorderColorTransition()
org.osmdroid.views.MapView: void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource)
com.mapbox.mapboxsdk.annotations.BubbleLayout: int getStrokeColor()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.mapbox.android.telemetry.TelemetryEnabler$State: com.mapbox.android.telemetry.TelemetryEnabler$State[] values()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLinePatternTransition()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.google.android.material.internal.FlowLayout: int getRowCount()
com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$BufferFormat: com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$BufferFormat valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void initialize(java.lang.String)
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: com.mapbox.geojson.Feature[] querySourceFeatures(java.lang.Object[])
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
org.osmdroid.views.MapView: double getLatitudeSpanDouble()
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: void finalize()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.google.gson.JsonObject: java.util.Set entrySet()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeGetVisibleCoordinateBounds(double[])
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float getResolution()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)
com.mapbox.android.telemetry.provider.MapboxTelemetryInitProvider: MapboxTelemetryInitProvider()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconHaloWidth()
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromLngLats(double,double,double,double)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconTranslateTransition(long,long)
com.google.android.material.chip.Chip: void setLayoutDirection(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.mapbox.geojson.CoordinateContainer: java.lang.Object coordinates()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[])
com.google.android.material.button.MaterialButton: void setInsetTop(int)
com.mapbox.mapboxsdk.Mapbox: boolean hasInstance()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.google.gson.JsonObject: boolean has(java.lang.String)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.mapbox.mapboxsdk.maps.NativeMapView: boolean onCanRemoveUnusedStyleImage(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
com.mapbox.geojson.Feature$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: java.util.List read(com.google.gson.stream.JsonReader)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
com.google.android.material.button.MaterialButton: int getTextHeight()
com.google.android.gms.common.GoogleApiAvailabilityLight: GoogleApiAvailabilityLight()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconHaloBlurTransition(long,long)
com.mapbox.mapboxsdk.maps.NativeMapView: void onCameraIsChanging()
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillOpacityTransition(long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(com.mapbox.geojson.MultiPoint,com.mapbox.geojson.BoundingBox)
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String,boolean)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
okhttp3.Protocol: okhttp3.Protocol[] values()
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: com.mapbox.geojson.Point read(com.google.gson.stream.JsonReader)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectLongitude(double)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionHeight()
org.osmdroid.views.MapView: org.osmdroid.api.IMapController getController()
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
com.google.gson.JsonArray: java.math.BigDecimal getAsBigDecimal()
com.google.android.material.button.MaterialButton: int getInsetBottom()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: java.lang.Class access$200(com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolSortKey()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleRadiusTransition(long,long)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextVariableAnchor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionInvalidateCallback: void onInvalidate()
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeatures(com.mapbox.geojson.Feature[])
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Long getMinimumTileUpdateInterval()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void finalize()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Integer nativeGetPrefetchZoomDelta()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetMinPitch(double)
com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.sources.VectorSource: com.mapbox.geojson.Feature[] querySourceFeatures(java.lang.String[],java.lang.Object[])
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.mapbox.mapboxsdk.style.layers.CircleLayer: void finalize()
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterHueRotate()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterBrightnessMin()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
org.osmdroid.views.CustomZoomButtonsDisplay$VerticalPosition: org.osmdroid.views.CustomZoomButtonsDisplay$VerticalPosition[] values()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void cancelTile(int,int,int)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setSize(int,int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeExaggeration()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation getOrientation(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetTransitionDelay(long)
com.mapbox.geojson.LineString$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.MultiPoint fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.mapbox.mapboxsdk.maps.widgets.CompassView: void setCompassImage(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleStrokeWidthTransition(long,long)
androidx.appcompat.widget.SearchView: int getInputType()
com.mapbox.mapboxsdk.maps.ObservableEvent: com.mapbox.mapboxsdk.maps.Value getData()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionHeightTransition()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.mapbox.geojson.BaseGeometryTypeAdapter: BaseGeometryTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter)
com.mapbox.mapboxsdk.plugins.offline.offline.OfflineDownloadService: OfflineDownloadService()
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Character)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconColorTransition()
com.mapbox.mapboxsdk.style.sources.VectorSource: void initialize(java.lang.String,java.lang.Object)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillOutlineColorTransition(long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.layers.Layer[] nativeGetLayers()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineTranslateTransition(long,long)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String toString()
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.gson.JsonArray: java.lang.String getAsString()
com.mapbox.android.telemetry.Event$Type: com.mapbox.android.telemetry.Event$Type valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextHaloColorTransition(long,long)
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeRemoveLayerAt(int)
androidx.cardview.widget.CardView: float getRadius()
com.mapbox.geojson.Feature$GsonTypeAdapter: Feature$GsonTypeAdapter(com.google.gson.Gson)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: OfflineDownloadEndEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,java.lang.Double,java.lang.Double)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromJson(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterOpacityTransition()
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: MapSnapshot(long,android.graphics.Bitmap,java.lang.String[],boolean)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.mapbox.mapboxsdk.maps.NativeMapView: long nativeGetTransitionDuration()
com.mapbox.mapboxsdk.http.NativeHttpRequest: void nativeOnFailure(int,java.lang.String)
com.mapbox.geojson.Point$GsonTypeAdapter: Point$GsonTypeAdapter(com.google.gson.Gson)
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.mapbox.geojson.BoundingBox)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetBearingXY(double,double,double,long)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String getCreated()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void finalize()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetShadowImage()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
com.mapbox.mapboxsdk.log.Logger: void v(java.lang.String,java.lang.String)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeatures(java.util.List)
androidx.preference.ListPreference: ListPreference(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.RasterLayer: RasterLayer(long)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineMiterLimit()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectSizeHeight(double)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: java.lang.Object nativeGetBackgroundPattern()
com.google.gson.JsonObject: java.util.Set keySet()
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: TelemetryImpl()
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeGetDebug()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionStatusCallback: void onError(java.lang.String)
com.google.gson.JsonPrimitive: int getAsInt()
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
androidx.fragment.app.DialogFragment: DialogFragment()
com.google.android.material.chip.Chip: void setLines(int)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.mapbox.android.telemetry.LocationEvent: java.lang.String getOperatingSystem()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: com.mapbox.geojson.GeometryCollection read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineOffsetTransition()
com.mapbox.mapboxsdk.style.layers.LineLayer: void initialize(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getMinEms()
com.mapbox.geojson.LineString: java.lang.String type()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: com.google.gson.JsonObject getMetadata()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
com.rarelane.merchforce.merchforce.MainActivity: MainActivity()
com.mapbox.mapboxsdk.maps.Value: Value(java.util.HashMap)
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getArrowWidth()
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromLngLats(java.util.List)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.List)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.mapbox.geojson.MultiLineString: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextTranslate()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetBearingImageSizeTransition(long,long)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] values()
com.mapbox.geojson.Point: boolean hasAltitude()
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineDasharrayTransition(long,long)
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleBlurTransition()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.google.android.material.chip.ChipGroup: void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener)
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean isWifi()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.LineString$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.preference.internal.PreferenceImageView: void setMaxWidth(int)
androidx.appcompat.widget.DrawableUtils$Api29Impl: android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable)
com.mapbox.geojson.FeatureCollection: java.lang.String toString()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
com.mapbox.geojson.GeoJson: java.lang.String type()
com.mapbox.geojson.BaseCoordinatesTypeAdapter: java.util.List readPointList(com.google.gson.stream.JsonReader)
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplifyRadialDist(java.util.List,double)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
org.osmdroid.views.MapView: org.osmdroid.util.GeoPoint getExpectedCenter()
com.mapbox.mapboxsdk.offline.OfflineRegion: void deleteOfflineRegion(com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionDeleteCallback)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeReset()
com.fasterxml.jackson.annotation.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As valueOf(java.lang.String)
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeTriggerRepaint()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddImages(com.mapbox.mapboxsdk.maps.Image[])
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: int hashCode()
org.osmdroid.views.MapView: void setMinZoomLevel(java.lang.Double)
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplifyDpStep(java.util.List,int,int,double,java.util.List)
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: GeometryCollection$GsonTypeAdapter(com.google.gson.Gson)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: com.mapbox.geojson.Feature[] nativeGetClusterLeaves(com.mapbox.geojson.Feature,long,long)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterSaturationTransition()
com.google.android.material.chip.Chip: float getChipStartPadding()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.mapbox.mapboxsdk.offline.OfflineRegion: void setOfflineRegionDownloadState(int)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.mapbox.mapboxsdk.offline.OfflineManager: void mergeOfflineRegions(com.mapbox.mapboxsdk.storage.FileSource,java.lang.String,com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void nativeSetTileData(int,int,int,com.mapbox.geojson.FeatureCollection)
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetBearing()
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
com.mapbox.mapboxsdk.offline.OfflineRegionError: OfflineRegionError(java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
com.mapbox.geojson.MultiLineString: java.lang.String toString()
com.mapbox.mapboxsdk.style.light.Light: void nativeSetIntensityTransition(long,long)
com.google.android.material.chip.Chip: float getChipIconSize()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
org.osmdroid.views.MapView: long getMapScrollY()
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: OfflineTilePyramidRegionDefinition(java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngBounds,double,double,float)
androidx.appcompat.widget.SwitchCompat: void setTextOnInternal(java.lang.CharSequence)
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddLayer(long,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.mapbox.geojson.GeometryCollection: boolean equals(java.lang.Object)
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMetersPerPixelAtLatitude(double,double)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void writeStringIfNotNull(android.os.Parcel,java.lang.String)
com.google.gson.JsonElement: com.google.gson.JsonElement deepCopy()
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.mapbox.mapboxsdk.style.light.Light: com.mapbox.mapboxsdk.style.light.Position nativeGetPosition()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: boolean equals(java.lang.Object)
org.osmdroid.views.MapView: double getZoomLevelDouble()
com.mapbox.geojson.Feature: java.lang.Boolean getBooleanProperty(java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void finalize()
androidx.preference.SwitchPreference: SwitchPreference(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.mapbox.mapboxsdk.style.light.Light: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetColorTransition()
com.mapbox.mapboxsdk.style.sources.UnknownSource: UnknownSource(long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.mapbox.mapboxsdk.maps.Value: java.lang.String toString()
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.geojson.Feature[] nativeQueryRenderedFeaturesForPoint(float,float,java.lang.String[],java.lang.Object[])
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.mapbox.mapboxsdk.style.sources.ImageSource: void finalize()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHeatmapRadiusTransition()
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String getEvent()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
com.google.android.gms.common.api.PendingResult: PendingResult()
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromOuterInner(com.mapbox.geojson.LineString,com.mapbox.geojson.BoundingBox,java.util.List)
org.osmdroid.views.MapController$ReplayType: org.osmdroid.views.MapController$ReplayType[] values()
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetAccuracyRadiusColorTransition()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: com.mapbox.mapboxsdk.style.sources.Source nativeGetSource(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.fasterxml.jackson.annotation.JsonInclude$Include: com.fasterxml.jackson.annotation.JsonInclude$Include valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setVehicleLatitude(double)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
com.mapbox.geojson.GeometryAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeature(com.mapbox.geojson.Feature,com.mapbox.geojson.BoundingBox)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectSizeWidth()
com.mapbox.mapboxsdk.maps.Value: Value(long)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)
com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.gson.JsonArray: com.google.gson.JsonElement get(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
com.google.gson.JsonElement: double getAsDouble()
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: java.util.List read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.style.layers.CustomLayer: void initialize(java.lang.String,long)
com.mapbox.geojson.BaseCoordinatesTypeAdapter: BaseCoordinatesTypeAdapter()
com.mapbox.mapboxsdk.offline.OfflineGeometryRegionDefinition: OfflineGeometryRegionDefinition(java.lang.String,com.mapbox.geojson.Geometry,double,double,float,boolean)
androidx.preference.PreferenceGroup: PreferenceGroup(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.MultiPolygon: java.util.List coordinates()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
org.osmdroid.views.MapView: void setMaxZoomLevel(java.lang.Double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.Double getMaxZoom()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.mapbox.mapboxsdk.maps.NativeMapView: void onWillStartRenderingMap()
hamza.dali.flutter_osm_plugin.network.ApiClient: java.lang.Object reverseGeoPointToAdress(java.lang.String,java.lang.String,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleSortKey()
com.mapbox.mapboxsdk.style.sources.RasterSource: void initialize(java.lang.String,java.lang.Object,int)
com.mapbox.mapboxsdk.Mapbox: android.content.res.AssetManager getAssetManager()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextTranslateAnchor()
com.mapbox.geojson.shifter.CoordinateShifterManager: void setCoordinateShifter(com.mapbox.geojson.shifter.CoordinateShifter)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
com.mapbox.geojson.Point: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleTranslateAnchor()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.google.gson.JsonElement: int getAsInt()
com.google.android.material.chip.Chip: void setChipStartPadding(float)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplify(java.util.List)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeOnSurfaceDestroyed()
com.mapbox.geojson.MultiPoint: java.lang.Object coordinates()
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.google.gson.JsonArray: com.google.gson.JsonElement remove(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeRemoveAnnotationIcon(java.lang.String)
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterFadeDuration()
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromLngLats(double,double,double,double,double,double)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.mapbox.geojson.BoundingBox: double north()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.mapbox.android.telemetry.LocationEvent: LocationEvent(java.lang.String,double,double,java.lang.String)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconOpacityTransition()
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeQueryPointAnnotations(android.graphics.RectF)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.mapbox.android.telemetry.Environment: com.mapbox.android.telemetry.Environment valueOf(java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.mapbox.mapboxsdk.geometry.LatLngQuad: LatLngQuad(com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.geometry.LatLng)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: long getSizeOfResourcesCompleted()
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.google.gson.JsonObject,java.lang.String,com.mapbox.geojson.BoundingBox)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.google.gson.TypeAdapter: void toJson(java.io.Writer,java.lang.Object)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleTranslate()
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.geometry.LatLng: LatLng(double,double)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: int describeContents()
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent buildOfflineDownloadCompleteEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,java.lang.Double,java.lang.Double,java.lang.String,long,long,int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.mapbox.geojson.Feature$GsonTypeAdapter: com.mapbox.geojson.Feature read(com.google.gson.stream.JsonReader)
com.google.android.gms.common.GoogleApiAvailability: GoogleApiAvailability()
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetLayoutProperty(java.lang.String,java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.cardview.widget.CardView: float getMaxCardElevation()
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextSize()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void finalize()
com.google.android.gms.location.LocationServices: LocationServices()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconImage()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.preference.internal.PreferenceImageView: PreferenceImageView(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: MapEventFactory()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleStrokeColorTransition(long,long)
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.Point southwest()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetBearingImage()
com.mapbox.mapboxsdk.log.Logger: void i(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: void run()
com.mapbox.geojson.Point: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.mapbox.geojson.shifter.CoordinateShifterManager$1: CoordinateShifterManager$1()
com.mapbox.mapboxsdk.log.Logger: void i(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void onCameraWillChange(boolean)
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String getSkuId()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String toString()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
org.osmdroid.views.MapView: void setUseDataConnection(boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconPadding()
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromOuterInner(com.mapbox.geojson.LineString,com.mapbox.geojson.LineString[])
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.mapbox.android.telemetry.KeyValue: KeyValue(java.lang.String,java.lang.String)
com.squareup.picasso.Picasso$LoadedFrom: com.squareup.picasso.Picasso$LoadedFrom[] values()
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeIsFullyLoaded()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: boolean access$000(com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.geometry.LatLng nativeGetLatLng()
com.google.gson.JsonArray: int size()
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineOpacityTransition(long,long)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String getOrientation()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetShadowImageSize()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillOpacity()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String getTextColor()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.mapbox.mapboxsdk.log.Logger: void v(java.lang.String,java.lang.String,java.lang.Throwable)
com.mapbox.mapboxsdk.style.layers.CircleLayer: CircleLayer(long)
com.mapbox.mapboxsdk.offline.OfflineManager: void nativeResetDatabase(com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeUnsubscribe(int,java.lang.String[])
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Long nativeGetMinimumTileUpdateInterval()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void queueEvent(com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Point)
com.mapbox.mapboxsdk.style.types.FormattedSection: int hashCode()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.gson.JsonElement: JsonElement()
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleStrokeWidth()
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterHueRotateTransition()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.Double getMaxZoom()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionBaseTransition(long,long)
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.List)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.ArrayList initList(java.lang.String,com.google.gson.reflect.TypeToken)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
com.mapbox.android.telemetry.LocationEvent: void setAltitude(java.lang.Double)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
com.squareup.picasso.Picasso$Priority: com.squareup.picasso.Picasso$Priority[] values()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionOpacity()
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetImagePitchDisplacement()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.google.android.material.chip.Chip: void setGravity(int)
com.google.gson.JsonPrimitive: com.google.gson.JsonPrimitive deepCopy()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.MultiLineString: java.lang.String toJson()
com.mapbox.geojson.MultiPolygon: MultiPolygon(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.mapboxsdk.net.NativeConnectivityListener: void finalize()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetReachability(boolean)
com.mapbox.geojson.FeatureCollection: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.mapbox.geojson.Feature: java.lang.String type()
org.osmdroid.views.MapView: void setExpectedCenter(org.osmdroid.api.IGeoPoint)
com.mapbox.mapboxsdk.style.light.Light: java.lang.String nativeGetColor()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineOpacityTransition()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.mapbox.geojson.GeometryAdapterFactory: com.google.gson.TypeAdapterFactory create()
com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: com.mapbox.mapboxsdk.geometry.LatLng latLngForPixel(android.graphics.PointF)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.gson.reflect.TypeToken: java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void nativeSetHillshadeShadowColorTransition(long,long)
com.google.android.material.chip.Chip: void setCheckableResource(int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
org.osmdroid.views.CustomZoomButtonsDisplay$HorizontalPosition: org.osmdroid.views.CustomZoomButtonsDisplay$HorizontalPosition valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillOpacityTransition()
com.mapbox.android.telemetry.Attachment: int describeContents()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.camera.CameraPosition nativeGetCameraPosition()
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.GeometryCollection)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Boolean)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: java.util.Map access$300(com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void setStyleURL(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
org.osmdroid.views.MapView: void setFlingEnabled(boolean)
com.mapbox.geojson.MultiPoint: MultiPoint(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.fasterxml.jackson.annotation.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As[] values()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeEaseTo(double,double,double,long,double,double,double[],boolean)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String getCarrier()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void nativeSetHeatmapRadiusTransition(long,long)
com.mapbox.mapboxsdk.offline.OfflineRegion: void updateOfflineRegionMetadata(byte[],com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionUpdateMetadataCallback)
org.osmdroid.views.MapView: org.osmdroid.api.IProjection getProjection()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetVisibleCoordinateBounds(com.mapbox.mapboxsdk.geometry.LatLng[],android.graphics.RectF,double,long)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddSource(com.mapbox.mapboxsdk.style.sources.Source,long)
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplifyDouglasPeucker(java.util.List,double)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getVehicleLongitude()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.mapbox.mapboxsdk.offline.OfflineManager: void nativeClearAmbientCache(com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.mapbox.mapboxsdk.style.layers.Layer: java.lang.String nativeGetId()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onStop()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String getState()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextOptional()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.light.Light nativeGetLight()
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterHueRotateTransition(long,long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat[] values()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
androidx.activity.ComponentActivity: ComponentActivity()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: com.mapbox.geojson.Feature[] querySourceFeatures(java.lang.Object[])
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.mapbox.mapboxsdk.style.light.Light: float nativeGetIntensity()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeIlluminationDirection()
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] values()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineGapWidthTransition()
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
org.osmdroid.views.MapView: void setHorizontalMapRepetitionEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.google.gson.JsonObject: int hashCode()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.List getAttributes()
com.mapbox.geojson.Feature: void addBooleanProperty(java.lang.String,java.lang.Boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetPitch()
com.mapbox.mapboxsdk.style.sources.Source: void setMaxOverscaleFactorForParentTiles(java.lang.Integer)
com.mapbox.android.telemetry.VisionEvent: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing: com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] values()
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setCameraPosition(com.mapbox.mapboxsdk.camera.CameraPosition)
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetMaxZoom(float)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.mapbox.mapboxsdk.storage.FileSource: void setApiBaseUrl(java.lang.String)
com.mapbox.geojson.Polygon: int hashCode()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
com.google.gson.JsonArray: short getAsShort()
com.mapbox.mapboxsdk.Mapbox: void setAccessToken(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void nativeInvalidateTile(int,int,int)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setCreated(java.lang.String)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeOnSurfaceCreated()
com.mapbox.mapboxsdk.style.light.Light: void nativeSetIntensity(float)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddLayerAt(long,int)
com.mapbox.geojson.shifter.CoordinateShifter: java.util.List unshiftPoint(com.mapbox.geojson.Point)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillTranslateTransition()
org.osmdroid.views.MapView: org.osmdroid.tileprovider.MapTileProviderBase getTileProvider()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String,java.lang.Number,java.lang.String[],java.lang.String)
com.google.android.material.internal.VisibilityAwareImageButton: VisibilityAwareImageButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature[] values()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void finalize()
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.MultiPolygon)
com.mapbox.android.telemetry.Environment: com.mapbox.android.telemetry.Environment[] values()
com.mapbox.geojson.Feature: java.lang.String toJson()
com.mapbox.mapboxsdk.style.sources.ImageSource: void nativeSetCoordinates(com.mapbox.mapboxsdk.geometry.LatLngQuad)
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: ListOfPointCoordinatesTypeAdapter()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.mapbox.mapboxsdk.style.layers.RasterLayer: void finalize()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
com.mapbox.mapboxsdk.maps.MapView: com.mapbox.mapboxsdk.maps.MapboxMap getMapboxMap()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapColor()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextColorTransition()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.mapbox.geojson.LineString$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.google.gson.JsonObject: int size()
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromPoints(com.mapbox.geojson.Point,com.mapbox.geojson.Point)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
com.mapbox.geojson.FeatureCollection: java.util.List features()
com.mapbox.mapboxsdk.style.layers.CustomLayer: void update()
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.mapbox.mapboxsdk.http.NativeHttpRequest: void executeLocalRequest(java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineOpacity()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.mapbox.android.telemetry.LocationEvent: void writeToParcel(android.os.Parcel,int)
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String getAttribution()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.fasterxml.jackson.core.JsonParser$Feature: com.fasterxml.jackson.core.JsonParser$Feature valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromLngLats(double[][][])
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionColor()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: PerformanceEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.squareup.picasso.Picasso$LoadedFrom: com.squareup.picasso.Picasso$LoadedFrom valueOf(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.google.gson.JsonArray: int hashCode()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionColorTransition(long,long)
com.squareup.picasso.MemoryPolicy: com.squareup.picasso.MemoryPolicy valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleColorTransition(long,long)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.mapbox.android.telemetry.VisionEvent: VisionEvent(android.os.Parcel)
com.baseflow.geolocator.GeolocatorLocationService: GeolocatorLocationService()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectLatitude()
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.mapbox.mapboxsdk.style.sources.Source: Source(long)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.offline.OfflineTilePyramidRegionDefinition: OfflineTilePyramidRegionDefinition(java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngBounds,double,double,float,boolean)
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeRemoveSource(com.mapbox.mapboxsdk.style.sources.Source,long)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineTranslateAnchor()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionVerticalGradient()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void nativeSetBackgroundColorTransition(long,long)
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: com.mapbox.geojson.BoundingBox read(com.google.gson.stream.JsonReader)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
com.mapbox.geojson.Point: Point(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.mapboxsdk.style.sources.Source: long getNativePtr()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionBaseTransition()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextPitchAlignment()
com.mapbox.mapboxsdk.style.sources.Source: void nativeSetMaxOverscaleFactorForParentTiles(java.lang.Integer)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconHaloColorTransition()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionInvalidateCallback: void onError(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetLocation()
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.location.LocationRequest: LocationRequest()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
org.osmdroid.views.MapView: long getMapScrollX()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: PhoneState(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.mapbox.geojson.gson.GeoJsonAdapterFactory$GeoJsonAdapterFactoryIml: GeoJsonAdapterFactory$GeoJsonAdapterFactoryIml()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.mapbox.android.telemetry.CrashEvent: int describeContents()
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetSourceLayer(java.lang.String)
androidx.preference.EditTextPreference: EditTextPreference(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
hamza.dali.flutter_osm_plugin.utilities.Constants$PositionMarker: hamza.dali.flutter_osm_plugin.utilities.Constants$PositionMarker[] values()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setVehicleLongitude(double)
androidx.core.app.ComponentActivity: ComponentActivity()
com.mapbox.geojson.Point$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleStrokeColor()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.mapbox.mapboxsdk.style.types.Formatted: Formatted(com.mapbox.mapboxsdk.style.types.FormattedSection[])
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.mapbox.mapboxsdk.offline.OfflineManager: void nativeSetMaximumAmbientCacheSize(long,com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.mapbox.geojson.utils.PolylineUtils: java.util.List decode(java.lang.String,int)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Boolean)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void writeToParcel(android.os.Parcel,int)
com.mapbox.mapboxsdk.maps.Value: Value(java.lang.String)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectSizeWidth(double)
org.osmdroid.views.MapView: void setMultiTouchScale(float)
com.mapbox.android.telemetry.AppUserTurnstile: void setAccuracyAuthorization(java.lang.String)
com.mapbox.mapboxsdk.maps.Observer: Observer()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void nativeSetHeatmapOpacityTransition(long,long)
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.mapbox.geojson.MultiPolygon: java.lang.String toString()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconOffset()
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.mapbox.mapboxsdk.style.layers.Layer: java.lang.Object nativeGetVisibility()
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
com.google.gson.JsonElement: boolean isJsonPrimitive()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetUserAnimationInProgress(boolean)
com.mapbox.geojson.Feature: java.lang.String getStringProperty(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.mapbox.geojson.Feature: void addProperty(java.lang.String,com.google.gson.JsonElement)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.mapbox.geojson.BoundingBox: double west()
com.squareup.picasso.NetworkPolicy: com.squareup.picasso.NetworkPolicy valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.mapbox.geojson.MultiPoint: java.lang.String type()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconTranslateTransition()
com.mapbox.android.telemetry.LocationEvent: java.lang.String getEvent()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextHaloBlur()
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromJson(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String,java.lang.Number,java.lang.String[])
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativePixelsForLatLngs(double[],double[],float)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetPaintProperty(java.lang.String,java.lang.Object)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.mapbox.android.telemetry.KeyValue: int describeContents()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
com.google.gson.JsonArray: void add(java.lang.Boolean)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.mapbox.mapboxsdk.maps.NativeMapView: void onStyleImageMissing(java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconOptional()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void setOnFpsChangedListener(com.mapbox.mapboxsdk.maps.MapboxMap$OnFpsChangedListener)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.gson.JsonObject: com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String)
com.mapbox.mapboxsdk.maps.ObservableEvent: java.util.Date getEnd()
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.mapbox.geojson.MultiPolygon: boolean equals(java.lang.Object)
com.google.gson.JsonElement: java.math.BigInteger getAsBigInteger()
com.mapbox.geojson.MultiPoint: boolean equals(java.lang.Object)
androidx.preference.internal.PreferenceImageView: int getMaxWidth()
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetMinZoom(float)
com.mapbox.geojson.GeometryCollection: java.util.List geometries()
androidx.preference.CheckBoxPreference: CheckBoxPreference(android.content.Context,android.util.AttributeSet)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: java.util.List read(com.google.gson.stream.JsonReader)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()
com.mapbox.geojson.Point: java.util.List coordinates()
com.mapbox.geojson.GeometryCollection: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeGetPrefetchTiles()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: int hashCode()
com.mapbox.mapboxsdk.style.layers.Layer: com.google.gson.JsonElement nativeGetFilter()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
com.mapbox.geojson.Feature: java.lang.Number getNumberProperty(java.lang.String)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: com.mapbox.mapboxsdk.style.layers.Layer nativeGetLayer(java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.mapbox.android.telemetry.Event: Event()
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
com.google.gson.JsonPrimitive: com.google.gson.JsonElement deepCopy()
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
org.osmdroid.views.MapController$ReplayType: org.osmdroid.views.MapController$ReplayType valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void updateFps()
com.mapbox.geojson.Point: java.lang.Object coordinates()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
org.osmdroid.views.MapView: void setVerticalMapRepetitionEnabled(boolean)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeResizeView(int,int)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
com.mapbox.mapboxsdk.offline.OfflineManager: void finalize()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetFeatureCollection(com.mapbox.geojson.FeatureCollection)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.mapbox.geojson.Feature: com.mapbox.geojson.BoundingBox bbox()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
org.osmdroid.views.MapView: void setZoomRounding(boolean)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
org.osmdroid.views.CustomZoomButtonsDisplay$VerticalPosition: org.osmdroid.views.CustomZoomButtonsDisplay$VerticalPosition valueOf(java.lang.String)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
org.osmdroid.views.MapView: void setMapCenter(org.osmdroid.api.IGeoPoint)
com.mapbox.geojson.Polygon: boolean isLinearRing(com.mapbox.geojson.LineString)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: float getResolution()
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterOpacityTransition(long,long)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.offline.OfflineManager$PrefetchAmbientCacheCallback: void onSuccess(long)
org.osmdroid.views.MapView: void setBackgroundColor(int)
com.google.gson.JsonObject: com.google.gson.JsonObject getAsJsonObject(java.lang.String)
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: MultiPolygon$GsonTypeAdapter(com.google.gson.Gson)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidFailLoadingMap(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String getEventName()
com.mapbox.mapboxsdk.storage.FileSource: void setAccessToken(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.gson.JsonArray: java.lang.Number getAsNumber()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom nativeGetLatLngBoundsZoomFromCamera(com.mapbox.mapboxsdk.camera.CameraPosition)
com.mapbox.mapboxsdk.offline.CacheAreaDefinition: CacheAreaDefinition(java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom[],float)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHillshadeShadowColorTransition()
com.mapbox.mapboxsdk.annotations.BubbleLayout: int getBubbleColor()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: BackgroundLayer(long)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onDidFinishLoadingStyle()
com.google.gson.JsonPrimitive: boolean getAsBoolean()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.mapbox.mapboxsdk.maps.Value: Value(java.util.ArrayList)
com.mapbox.android.telemetry.VisionEvent: void setContents(java.util.HashMap)
com.mapbox.mapboxsdk.Mapbox: void validateMapbox()
com.mapbox.mapboxsdk.offline.CacheAreaDefinition: CacheAreaDefinition(java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom[],float,boolean)
com.mapbox.geojson.LineString: java.lang.String toJson()
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.mapbox.geojson.LineString: java.util.List coordinates()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddLayerBelow(long,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.mapbox.mapboxsdk.http.NativeHttpRequest: void onResponse(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[])
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetDebug(boolean)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$DepthStencilFormat: com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$DepthStencilFormat[] values()
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
androidx.core.app.JobIntentService: JobIntentService()
com.google.gson.JsonArray: com.google.gson.JsonElement deepCopy()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$PerformanceAttribute: PerformanceEvent$PerformanceAttribute(java.lang.String,java.lang.Object)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String readStringIfNotNull(android.os.Parcel)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextFont()
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: boolean isCancelled(int,int,int)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeAccentColor()
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getCornersRadius()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback: void onCreate(com.mapbox.mapboxsdk.offline.OfflineRegion)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.Fragment: Fragment()
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillColorTransition(long,long)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
org.osmdroid.views.MapView: void setScrollableAreaLimitDouble(org.osmdroid.util.BoundingBox)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.mapbox.android.telemetry.VisionEvent: com.mapbox.android.telemetry.Event$Type obtainType()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
com.mapbox.android.telemetry.errors.ErrorReporterJobIntentService: ErrorReporterJobIntentService()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.google.gson.JsonArray: com.google.gson.JsonArray deepCopy()
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionPatternTransition()
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String getEventName()
com.mapbox.geojson.LineString$GsonTypeAdapter: LineString$GsonTypeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeAddPolylines(com.mapbox.mapboxsdk.annotations.Polyline[])
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
org.osmdroid.views.MapView: double getMinZoomLevel()
com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback: void onList(com.mapbox.mapboxsdk.offline.OfflineRegion[])
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIconHaloWidthTransition()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback: void onSuccess()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.mapbox.mapboxsdk.style.sources.RasterSource: RasterSource(long)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: com.mapbox.geojson.MultiPolygon read(com.google.gson.stream.JsonReader)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setStyleUrl(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setMaxImageSize(int)
org.osmdroid.views.MapView: org.osmdroid.views.CustomZoomButtonsController getZoomController()
com.mapbox.mapboxsdk.style.light.Light: void nativeSetAnchor(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromGeometry(com.mapbox.geojson.Geometry)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddAnnotationIcon(java.lang.String,int,int,float,byte[])
com.google.gson.JsonElement: boolean isJsonArray()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
com.google.gson.JsonObject: com.google.gson.JsonElement deepCopy()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.mapbox.mapboxsdk.style.sources.RasterDemSource: java.lang.String nativeGetUrl()
com.mapbox.geojson.MultiPoint: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(com.mapbox.geojson.MultiPoint)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.mapbox.android.telemetry.CrashEvent: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromGeometries(java.util.List,com.mapbox.geojson.BoundingBox)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Character)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.MultiPoint fromJson(java.lang.String)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void nativeSetHillshadeHighlightColorTransition(long,long)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.http.NativeHttpRequest: NativeHttpRequest(long,java.lang.String,java.lang.String,java.lang.String,boolean)
com.mapbox.geojson.LineString$GsonTypeAdapter: com.mapbox.geojson.LineString read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
org.osmdroid.views.MapView: void setBuiltInZoomControls(boolean)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setRegion(com.mapbox.mapboxsdk.geometry.LatLngBounds)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleStrokeOpacityTransition()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconTextFitPadding()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetLatLng(double,double,double[],long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onPerformanceEvent(android.os.Bundle)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetTransitionOptions(com.mapbox.mapboxsdk.style.layers.TransitionOptions)
com.mapbox.android.telemetry.Attachment: void addAttachment(com.mapbox.android.telemetry.FileAttachment)
com.mapbox.geojson.BaseCoordinatesTypeAdapter: void writePointList(com.google.gson.stream.JsonWriter,java.util.List)
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.BoundingBox bbox()
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setCarrier(java.lang.String)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromJson(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeCancelTransitions()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeInitialize(com.mapbox.mapboxsdk.maps.renderer.MapRenderer,float,int,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
org.osmdroid.views.MapView: float getMapOrientation()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.mapbox.geojson.Feature: com.google.gson.JsonElement removeProperty(java.lang.String)
com.google.gson.JsonElement: float getAsFloat()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$1: PerformanceEvent$1(com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent)
com.mapbox.geojson.MultiPoint: int hashCode()
com.mapbox.geojson.FeatureCollection: java.lang.String type()
com.fasterxml.jackson.annotation.JsonInclude$Include: com.fasterxml.jackson.annotation.JsonInclude$Include[] values()
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double,double,double)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.mapbox.mapboxsdk.log.Logger: void log(int,java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.maps.GlyphsRasterizationMode: com.mapbox.mapboxsdk.maps.GlyphsRasterizationMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double[])
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHeatmapOpacityTransition()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.mapbox.android.telemetry.AppUserTurnstile: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.mapbox.android.telemetry.AppUserTurnstile: java.lang.String getAccuracyAuthorization()
com.mapbox.geojson.MultiPoint: java.lang.String toJson()
org.osmdroid.views.MapView: org.osmdroid.api.IGeoPoint getMapCenter()
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double,double)
com.mapbox.mapboxsdk.maps.Image: Image(byte[],float,java.lang.String,int,int,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.geojson.GeometryCollection: java.lang.String toJson()
com.mapbox.geojson.FeatureCollection: int hashCode()
com.google.gson.JsonObject: JsonObject()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: MapBaseEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextAllowOverlap()
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
androidx.lifecycle.LifecycleCoroutineScope: LifecycleCoroutineScope()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.material.chip.Chip: float getChipEndPadding()
com.mapbox.mapboxsdk.storage.FileSource: void setResourceTransform(com.mapbox.mapboxsdk.storage.FileSource$ResourceTransformCallback)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineDasharray()
com.mapbox.mapboxsdk.net.NativeConnectivityListener: void initialize()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.mapbox.mapboxsdk.style.light.Light: Light(long)
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: boolean getPreserveEGLContextOnPause()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.mapbox.android.telemetry.AppUserTurnstile: int describeContents()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
com.google.gson.JsonPrimitive: java.lang.String getAsString()
org.osmdroid.views.MapView: org.osmdroid.views.MapViewRepository getRepository()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
org.osmdroid.views.MapView: void setTileProvider(org.osmdroid.tileprovider.MapTileProviderBase)
com.mapbox.android.telemetry.CrashEvent: com.mapbox.android.telemetry.Event$Type obtainType()
com.mapbox.geojson.Polygon$GsonTypeAdapter: Polygon$GsonTypeAdapter(com.google.gson.Gson)
com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String toString()
com.google.gson.JsonElement: boolean getAsBoolean()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeUpdatePolyline(long,com.mapbox.mapboxsdk.annotations.Polyline)
com.mapbox.mapboxsdk.style.layers.FillLayer: void finalize()
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setOrientation(com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetGeometry(com.mapbox.geojson.Geometry)
com.mapbox.mapboxsdk.log.Logger: void e(java.lang.String,java.lang.String,java.lang.Throwable)
com.mapbox.android.telemetry.VisionEvent: int describeContents()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineDasharrayTransition()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.gson.JsonElement: long getAsLong()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectLatitude(double)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onCreateOfflineRegion(com.mapbox.mapboxsdk.offline.OfflineRegionDefinition)
org.osmdroid.views.MapView: void setMultiTouchControls(boolean)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterContrastTransition()
com.mapbox.android.telemetry.VisionEvent: void setName(java.lang.String)
com.mapbox.geojson.BoundingBox: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.mapbox.android.telemetry.VisionEvent: VisionEvent(android.os.Parcel,com.mapbox.android.telemetry.VisionEvent$1)
androidx.constraintlayout.widget.Barrier: int getMargin()
com.mapbox.geojson.BoundingBox: boolean equals(java.lang.Object)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.layers.Layer nativeGetLayer(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void initialize(java.lang.String,java.lang.Object)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.mapbox.mapboxsdk.style.types.FormattedSection: void setFontStack(java.lang.String[])
com.mapbox.mapboxsdk.annotations.BubbleLayout: BubbleLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void finalize()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.android.material.chip.Chip: void setChipIconResource(int)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleRadius()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void nativeSetHillshadeExaggerationTransition(long,long)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode[] values()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.mapbox.mapboxsdk.Mapbox: boolean isAccessTokenValid(java.lang.String)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.mapbox.mapboxsdk.style.layers.CustomLayer: void finalize()
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: MultiPoint$GsonTypeAdapter(com.google.gson.Gson)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetTopImageSizeTransition(long,long)
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: void initialize()
com.mapbox.android.telemetry.LocationEvent: java.lang.Double getAltitude()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.mapbox.mapboxsdk.Mapbox: android.content.Context getApplicationContext()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetShadowImageSizeTransition(long,long)
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetGeoJsonString(java.lang.String)
com.google.gson.JsonArray: int getAsInt()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: int nativeGetClusterExpansionZoom(com.mapbox.geojson.Feature)
com.mapbox.geojson.Polygon$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.snapshotter.MapSnapshot: android.graphics.PointF pixelForLatLng(com.mapbox.mapboxsdk.geometry.LatLng)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.mapbox.geojson.Polygon: com.mapbox.geojson.LineString outer()
com.mapbox.mapboxsdk.style.sources.RasterDemSource: RasterDemSource(long)
com.google.gson.JsonElement: com.google.gson.JsonNull getAsJsonNull()
com.google.android.material.chip.Chip: void setRippleColorResource(int)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillColorTransition()
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromCoordinates(double,double,double,double,double,double)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String getEvent()
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: java.lang.String access$100(com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.mapbox.geojson.utils.GeoJsonUtils: double trim(double)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.google.gson.JsonObject)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature[] values()
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.mapbox.geojson.Polygon: Polygon(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.FeatureCollection)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolSpacing()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineRoundLimit()
com.mapbox.geojson.shifter.CoordinateShifter: java.util.List shiftLonLatAlt(double,double,double)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.geojson.Feature[] nativeQueryRenderedFeaturesForBox(float,float,float,float,java.lang.String[],java.lang.Object[])
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.mapbox.mapboxsdk.offline.OfflineRegionStatus: OfflineRegionStatus(int,long,long,long,long,long,boolean)
com.google.gson.JsonArray: boolean contains(com.google.gson.JsonElement)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getAccessToken()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.mapbox.mapboxsdk.offline.OfflineManager: void setOfflineMapboxTileCountLimit(long)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.mapbox.geojson.gson.GeoJsonAdapterFactory: com.google.gson.TypeAdapterFactory create()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeResetZoom()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.google.gson.JsonElement: char getAsCharacter()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleRadiusTransition()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTransitionOptions()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionPattern()
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String getEventName()
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: VisionObjectDetectionEvent(java.lang.String)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.preference.internal.PreferenceImageView: int getMaxHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: int getTextWidth()
com.mapbox.mapboxsdk.maps.NativeMapView: java.lang.String nativeGetStyleUrl()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setPluggedIn(boolean)
com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing: com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing valueOf(java.lang.String)
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.Point northeast()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.MultiPoint)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getUserId()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextField()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.mapbox.mapboxsdk.Mapbox: java.lang.Boolean isConnected()
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
com.lyokone.location.FlutterLocationService: FlutterLocationService()
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void startThreads()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionColorTransition()
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
com.mapbox.mapboxsdk.style.sources.VectorSource: java.lang.String nativeGetUrl()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillPattern()
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean isConnectedToWifi(android.content.Context)
com.google.gson.JsonElement: boolean isJsonObject()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterOpacity()
androidx.core.widget.NestedScrollView: int getScrollRange()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.fasterxml.jackson.annotation.JsonFormat$Shape: com.fasterxml.jackson.annotation.JsonFormat$Shape[] values()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconKeepUpright()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
org.osmdroid.views.MapView: double getLongitudeSpanDouble()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.mapbox.geojson.Feature: java.lang.Character getCharacterProperty(java.lang.String)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.mapbox.mapboxsdk.style.types.FormattedSection: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionTranslateAnchor()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
com.google.gson.JsonPrimitive: float getAsFloat()
com.mapbox.geojson.Polygon: java.lang.String type()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextJustify()
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineManager: void listOfflineRegions(com.mapbox.mapboxsdk.storage.FileSource,com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback)
com.mapbox.android.telemetry.AppStateUtils$AppState: com.mapbox.android.telemetry.AppStateUtils$AppState[] values()
com.mapbox.geojson.BaseGeometryTypeAdapter: void writeCoordinateContainer(com.google.gson.stream.JsonWriter,com.mapbox.geojson.CoordinateContainer)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: int hashCode()
com.mapbox.geojson.GeoJson: java.lang.String toJson()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.google.android.material.button.MaterialButton: int getIconSize()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void initialize(java.lang.String,java.lang.String)
com.mapbox.geojson.MultiLineString: java.lang.String type()
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: PhoneState()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.mapbox.geojson.LineString: com.mapbox.geojson.BoundingBox bbox()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextHaloWidth()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
com.mapbox.geojson.BaseGeometryTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainEndUserId()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getSdkIdentifier()
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: boolean equals(java.lang.Object)
com.google.gson.JsonPrimitive: double getAsDouble()
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getArrowPosition()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineTranslateTransition()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: void setRenderer(android.opengl.GLSurfaceView$Renderer)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextPadding()
com.mapbox.android.telemetry.LocationEvent: com.mapbox.android.telemetry.Event$Type obtainType()
com.mapbox.mapboxsdk.offline.OfflineManager$PrefetchAmbientCacheCallback: void onError(long,java.lang.String)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
com.mapbox.android.telemetry.AppUserTurnstile: void checkApplicationContext()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectPositionHeight()
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onGestureInteraction(java.lang.String,double,double,double)
com.mapbox.mapboxsdk.style.sources.ImageSource: void nativeSetUrl(java.lang.String)
com.mapbox.geojson.shifter.CoordinateShifter: java.util.List unshiftPoint(java.util.List)
org.osmdroid.views.MapView: float getTilesScaleFactor()
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainMapsSkuUserToken(java.lang.String)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: ListOfListOfPointCoordinatesTypeAdapter()
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.mapbox.mapboxsdk.style.sources.Source: void setMinimumTileUpdateInterval(java.lang.Long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconSize()
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy valueOf(java.lang.String)
com.mapbox.android.telemetry.Event: com.mapbox.android.telemetry.Event$Type obtainType()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.maps.Observer: int getId()
com.mapbox.mapboxsdk.style.sources.Source: void checkThread()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.mapbox.geojson.gson.GeoJsonAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.gson.TypeAdapter: java.lang.Object fromJsonTree(com.google.gson.JsonElement)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconTranslate()
com.mapbox.geojson.Point$GsonTypeAdapter: com.mapbox.geojson.Point read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.maps.widgets.CompassView: void setCompassImageResource(int)
com.mapbox.geojson.Feature: com.google.gson.JsonObject properties()
com.mapbox.mapboxsdk.style.sources.ImageSource: ImageSource(long)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.squareup.moshi.JsonReader$Token: com.squareup.moshi.JsonReader$Token valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterContrastTransition(long,long)
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromCoordinates(double,double,double,double)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.gson.JsonArray: byte getAsByte()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.mapbox.mapboxsdk.maps.MapView: void setMapboxMap(com.mapbox.mapboxsdk.maps.MapboxMap)
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.style.types.FormattedSection: void setTextColor(java.lang.String)
com.google.gson.reflect.TypeToken: java.lang.String toString()
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeQueryShapeAnnotations(android.graphics.RectF)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHeatmapIntensityTransition()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.geojson.MultiPolygon: java.lang.String toJson()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.mapbox.mapboxsdk.style.layers.TransitionOptions: com.mapbox.mapboxsdk.style.layers.TransitionOptions fromTransitionOptions(long,long,boolean)
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.gson.JsonElement: java.lang.Number getAsNumber()
com.google.gson.JsonObject: com.google.gson.JsonArray getAsJsonArray(java.lang.String)
com.mapbox.mapboxsdk.camera.CameraPosition: CameraPosition(com.mapbox.mapboxsdk.geometry.LatLng,double,double,double,double[])
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextColor()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
com.mapbox.android.telemetry.CrashEvent: boolean isValid()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver: void onError(com.mapbox.mapboxsdk.offline.OfflineRegionError)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetTransitionDuration(long)
androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat valueOf(java.lang.String)
com.mapbox.mapboxsdk.log.Logger: void setLoggerDefinition(com.mapbox.mapboxsdk.log.LoggerDefinition)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.fasterxml.jackson.annotation.JsonFormat$Shape: com.fasterxml.jackson.annotation.JsonFormat$Shape valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextTranslateTransition()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetAccuracyRadiusTransition(long,long)
com.mapbox.geojson.LineString: java.lang.String toPolyline(int)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.google.gson.JsonElement: boolean isJsonNull()
com.mapbox.mapboxsdk.http.NativeHttpRequest: void handleFailure(int,java.lang.String)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onSnapshotFailed(java.lang.String)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: FillExtrusionLayer(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: BoundingBoxTypeAdapter()
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.mapbox.mapboxsdk.storage.FileSource$ResourcesCachePathChangeCallback: void onSuccess(java.lang.String)
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory$1: RuntimeTypeAdapterFactory$1(com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory,java.util.Map,java.util.Map)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.sources.Source nativeGetSource(java.lang.String)
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeDestroy()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String getSignValue()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.BoundingBox bbox()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.material.internal.BaselineLayout: int getBaseline()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void fetchTile(int,int,int)
com.mapbox.mapboxsdk.style.sources.RasterSource: void finalize()
com.mapbox.geojson.FeatureCollection: boolean equals(java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.mapbox.geojson.shifter.CoordinateShifterManager$1: java.util.List unshiftPoint(java.util.List)
com.google.android.material.card.MaterialCardView: int getCheckedIconGravity()
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplify(java.util.List,double)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setDistanceFromCamera(double)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterBrightnessMinTransition()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.mapbox.geojson.Point$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Point)
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: boolean getIncludeIdeographs()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconColorTransition(long,long)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineOffset()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void initialize(java.lang.String)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String obtainCellularCarrier(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillTranslate()
com.mapbox.geojson.LineString: int hashCode()
com.mapbox.geojson.MultiPoint: java.lang.String toString()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String getShapeForOfflineRegion()
com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetUrl(java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextLineHeight()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
androidx.preference.UnPressableLinearLayout: UnPressableLinearLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.maps.NativeMapView: java.lang.String nativeGetStyleJson()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineCap()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLineString(com.mapbox.geojson.LineString,com.mapbox.geojson.BoundingBox)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Boolean nativeIsVolatile()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: java.lang.String nativeGetUrl()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.mapbox.geojson.Polygon$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature[] values()
com.mapbox.mapboxsdk.style.layers.LineLayer: LineLayer(long)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
org.osmdroid.views.MapView: org.osmdroid.util.TileSystem getTileSystem()
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.types.Formatted: int hashCode()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind: com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] values()
com.google.android.material.chip.Chip: void setChecked(boolean)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineColor()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: MapLoadEvent(java.lang.String,com.mapbox.mapboxsdk.module.telemetry.PhoneState)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.google.gson.JsonArray: boolean equals(java.lang.Object)
com.mapbox.android.telemetry.CrashEvent: java.lang.String getHash()
com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] values()
com.mapbox.geojson.MultiLineString: java.lang.Object coordinates()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
androidx.cardview.widget.CardView: float getCardElevation()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetMaxZoom(double)
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionUpdateMetadataCallback: void onUpdate(byte[])
org.osmdroid.views.CustomZoomButtonsController$Visibility: org.osmdroid.views.CustomZoomButtonsController$Visibility[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetBackgroundColorTransition()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.mapbox.android.telemetry.LocationEvent: LocationEvent(android.os.Parcel,com.mapbox.android.telemetry.LocationEvent$1)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.google.gson.JsonObject: com.google.gson.JsonElement remove(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineManager: void createOfflineRegion(com.mapbox.mapboxsdk.storage.FileSource,com.mapbox.mapboxsdk.offline.OfflineRegionDefinition,byte[],com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] values()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getSdkVersion()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.mapbox.mapboxsdk.maps.NativeMapView: int nativeGetPrefetchZoomDelta()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLineStrings(java.util.List,com.mapbox.geojson.BoundingBox)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetLatLngBounds(com.mapbox.mapboxsdk.geometry.LatLngBounds)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextRotate()
com.mapbox.mapboxsdk.style.light.Light: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetIntensityTransition()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.mapbox.geojson.ListOfListOfPointCoordinatesTypeAdapter: java.util.List read(com.google.gson.stream.JsonReader)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionDeleteCallback: void onDelete()
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainVisionSkuUserToken(java.lang.String)
com.google.gson.JsonPrimitive: long getAsLong()
com.mapbox.mapboxsdk.maps.NativeMapView: long nativeGetTransitionDelay()
com.mapbox.mapboxsdk.maps.NativeMapView: android.graphics.PointF nativePixelForLatLng(double,double)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.mapbox.mapboxsdk.style.layers.TransitionOptions: com.mapbox.mapboxsdk.style.layers.TransitionOptions fromTransitionOptions(long,long)
com.google.gson.JsonElement: java.lang.String toString()
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: com.mapbox.geojson.Feature[] nativeGetClusterChildren(com.mapbox.geojson.Feature)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromJson(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.mapbox.geojson.Polygon: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.mapbox.geojson.shifter.CoordinateShifterManager: com.mapbox.geojson.shifter.CoordinateShifter getCoordinateShifter()
com.mapbox.android.telemetry.LocationEvent: int describeContents()
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.squareup.picasso.PicassoProvider: PicassoProvider()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: com.mapbox.geojson.MultiPoint read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddImages(com.mapbox.mapboxsdk.maps.Image[])
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String)
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillOutlineColor()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.mapbox.geojson.Point: java.lang.String toJson()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.mapbox.mapboxsdk.maps.Value: java.lang.Object getContents()
com.mapbox.mapboxsdk.style.sources.UnknownSource: void finalize()
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLineStrings(java.util.List)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
org.osmdroid.views.MapView: double getMaxZoomLevel()
com.google.gson.JsonArray: JsonArray()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
com.mapbox.geojson.MultiLineString: int hashCode()
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void setStyleJson(java.lang.String)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextRotationAlignment()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String getEventName()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback: void onError(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
com.google.android.material.card.MaterialCardView: float getProgress()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.mapbox.geojson.GeometryCollection: java.lang.String toString()
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionOpacityTransition(long,long)
org.osmdroid.views.CustomZoomButtonsController$Visibility: org.osmdroid.views.CustomZoomButtonsController$Visibility valueOf(java.lang.String)
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.MultiPoint fromLngLats(double[][])
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillColor()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconHaloBlur()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.lang.String getSessionId()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setResolution(float)
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterBrightnessMinTransition(long,long)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.maps.TelemetryDefinition getTelemetry()
com.mapbox.mapboxsdk.style.sources.RasterSource: java.lang.String nativeGetUrl()
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
com.mapbox.geojson.gson.BoundingBoxTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.BoundingBox)
androidx.appcompat.widget.SwitchCompat: void setTextOffInternal(java.lang.CharSequence)
com.mapbox.android.telemetry.VisionEvent: java.util.HashMap getContents()
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionDeleteCallback: void onError(java.lang.String)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTopImageSizeTransition()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
androidx.cardview.widget.CardView: int getContentPaddingTop()
com.mapbox.geojson.Polygon: boolean equals(java.lang.Object)
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.mapbox.geojson.GeometryAdapterFactory: GeometryAdapterFactory()
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterResampling()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
com.google.gson.JsonArray: java.util.Iterator iterator()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.mapbox.geojson.BoundingBox: double south()
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent: java.util.List getCounters()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
com.mapbox.geojson.Polygon: java.util.List inner()
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
com.mapbox.mapboxsdk.maps.MapView: android.graphics.Bitmap getViewContent()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeRotateBy(double,double,double,double,long)
com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom: LatLngBoundsZoom(com.mapbox.mapboxsdk.geometry.LatLngBounds,double)
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
org.osmdroid.views.MapView: int getMapCenterOffsetX()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetAccuracyRadius()
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainVisionFleetSkuUserToken(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.google.gson.JsonElement: java.lang.String getAsString()
com.mapbox.mapboxsdk.http.NativeHttpRequest: java.util.concurrent.locks.ReentrantLock access$000(com.mapbox.mapboxsdk.http.NativeHttpRequest)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: java.lang.Object nativeGetFillExtrusionBase()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.Double getMinZoom()
com.google.gson.JsonArray: void add(java.lang.String)
com.mapbox.geojson.MultiPolygon: java.lang.Object coordinates()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String getText()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.mapbox.geojson.BaseGeometryTypeAdapter: com.mapbox.geojson.CoordinateContainer readCoordinateContainer(com.google.gson.stream.JsonReader)
com.mapbox.android.telemetry.Attachment: java.util.List getAttachments()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: long getNumberOfTilesCompleted()
com.mapbox.mapboxsdk.style.sources.Source: void setPrefetchZoomDelta(java.lang.Integer)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onSurfaceDestroyed()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.google.android.material.chip.Chip: float getIconStartPadding()
com.mapbox.mapboxsdk.Mapbox: com.mapbox.mapboxsdk.ModuleProvider getModuleProvider()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.android.telemetry.LocationEvent: LocationEvent(android.os.Parcel)
com.mapbox.geojson.MultiPolygon: java.util.List polygons()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.maps.Observer: void notify(com.mapbox.mapboxsdk.maps.ObservableEvent)
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView$EGLWindowSurfaceFactory)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: com.mapbox.mapboxsdk.geometry.LatLngBounds getBounds()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineSortKey()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void finalize()
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void setMaximumFps(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.mapbox.mapboxsdk.style.sources.ImageSource: java.lang.String nativeGetUrl()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: java.lang.Object nativeGetBackgroundColor()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(double[][])
com.mapbox.mapboxsdk.style.light.Light: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetPositionTransition()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.mapbox.mapboxsdk.Mapbox: java.lang.String getSkuToken()
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.MultiLineString)
com.mapbox.geojson.Polygon: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeInitialize(com.mapbox.mapboxsdk.maps.NativeMapView,com.mapbox.mapboxsdk.storage.FileSource,com.mapbox.mapboxsdk.maps.renderer.MapRenderer,float,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
com.mapbox.geojson.utils.GeoJsonUtils: GeoJsonUtils()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.mapbox.mapboxsdk.Mapbox: Mapbox(android.content.Context,java.lang.String)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setCellularNetworkType(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeRemoveImage(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.preference.TwoStatePreference: TwoStatePreference(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void nativeSetBackgroundPatternTransition(long,long)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHillshadeExaggerationTransition()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.mapbox.mapboxsdk.style.sources.Source: Source()
org.osmdroid.views.MapView: void setDestroyMode(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextHaloBlurTransition()
com.mapbox.android.telemetry.AppUserTurnstile: void setSkuId(java.lang.String)
com.mapbox.geojson.Polygon: com.mapbox.geojson.BoundingBox bbox()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeStart()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.mapbox.mapboxsdk.style.sources.VectorSource: void finalize()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextOpacityTransition()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextWritingMode()
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetMinZoom(double)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineWidthTransition()
com.mapbox.geojson.Polygon: java.lang.String toJson()
com.google.gson.JsonArray: double getAsDouble()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
androidx.lifecycle.ViewModel: ViewModel()
com.mapbox.android.telemetry.TelemetryEnabler$State: com.mapbox.android.telemetry.TelemetryEnabler$State valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleOpacity()
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleStrokeOpacity()
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: double getMinZoom()
com.mapbox.android.telemetry.MapboxTelemetryService: MapboxTelemetryService()
com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void writeDoubleIfNotNull(android.os.Parcel,java.lang.Double)
com.fasterxml.jackson.core.JsonParser$Feature: com.fasterxml.jackson.core.JsonParser$Feature[] values()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String getStyleURL()
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.mapbox.mapboxsdk.offline.OfflineManager: void initialize(com.mapbox.mapboxsdk.storage.FileSource)
org.osmdroid.views.MapView: void setTilesScaledToDpi(boolean)
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: java.lang.String getStyleURL()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolPlacement()
com.mapbox.geojson.BoundingBox: com.mapbox.geojson.BoundingBox fromJson(java.lang.String)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: void nativeSetFillExtrusionPatternTransition(long,long)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.mapbox.mapboxsdk.http.NativeHttpRequest: void cancel()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetMaxZoom()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
com.mapbox.android.telemetry.Attachment: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onDestroy()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: LocationIndicatorLayer(long)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.mapbox.mapboxsdk.maps.NativeMapView: void onWillStartLoadingMap()
com.mapbox.geojson.Point: double altitude()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextMaxAngle()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: OfflineDownloadStartEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,java.lang.Double,java.lang.Double)
com.mapbox.mapboxsdk.style.light.Position: com.mapbox.mapboxsdk.style.light.Position fromPosition(float,float,float)
com.mapbox.mapboxsdk.style.types.Formatted: boolean equals(java.lang.Object)
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.geojson.shifter.CoordinateShifterManager: CoordinateShifterManager()
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainNavigationSkuSessionToken()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onResume()
com.mapbox.mapboxsdk.style.layers.Layer: java.lang.String nativeGetSourceLayer()
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.mapbox.mapboxsdk.Mapbox: void setConnected(java.lang.Boolean)
com.mapbox.android.telemetry.AppUserTurnstile: com.mapbox.android.telemetry.Event$Type obtainType()
com.mapbox.mapboxsdk.maps.ObservableEvent: java.lang.String getType()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback: void onError(java.lang.String)
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextHaloWidthTransition(long,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionStatusCallback: void onStatus(com.mapbox.mapboxsdk.offline.OfflineRegionStatus)
com.mapbox.mapboxsdk.utils.StringUtils: StringUtils()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.mapbox.mapboxsdk.style.light.Light: void nativeSetPositionTransition(long,long)
com.mapbox.mapboxsdk.http.NativeHttpRequest: void nativeOnResponse(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[])
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.cardview.widget.CardView: void setRadius(float)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.mapbox.mapboxsdk.style.layers.CircleLayer: void initialize(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation[] values()
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: FeatureCollection$GsonTypeAdapter(com.google.gson.Gson)
com.mapbox.geojson.Point$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.MultiPoint: com.mapbox.geojson.MultiPoint fromLngLats(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetAccuracyRadiusBorderColor()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback: void onError(java.lang.String)
com.google.gson.reflect.TypeToken: TypeToken()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getObjectLongitude()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.mapbox.mapboxsdk.style.layers.CustomLayer: CustomLayer(long)
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver: void onStatusChanged(com.mapbox.mapboxsdk.offline.OfflineRegionStatus)
com.mapbox.geojson.shifter.CoordinateShifter: java.util.List shiftLonLat(double,double)
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromGeometries(java.util.List)
com.mapbox.mapboxsdk.maps.NativeMapView: void onCameraDidChange(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeJumpTo(double,double,double,double,double,double[])
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.mapbox.geojson.Feature: com.google.gson.JsonElement getProperty(java.lang.String)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.mapbox.geojson.utils.PolylineUtils: void encode(long,java.lang.StringBuilder)
com.google.android.gms.common.api.internal.zzc: zzc()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.mapbox.mapboxsdk.offline.OfflineManager: void nativeInvalidateAmbientCache(com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.String[] getFontStack()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean isWifi()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.mapbox.mapboxsdk.style.sources.ImageSource: void initialize(java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngQuad)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextHaloWidthTransition()
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeIsUserAnimationInProgress()
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetBackgroundOpacityTransition()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineGapWidth()
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromOuterInner(com.mapbox.geojson.LineString,com.mapbox.geojson.BoundingBox,com.mapbox.geojson.LineString[])
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapOpacity()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind: com.squareup.picasso.MediaStoreRequestHandler$PicassoKind valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.google.gson.JsonPrimitive: byte getAsByte()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCirclePitchAlignment()
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.osmdroid.views.MapView: void setMapOrientation(float)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String nativeGetId()
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddLayerAbove(long,java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setBatteryLevel(int)
com.mapbox.android.accounts.v1.MapboxAccounts: java.lang.String obtainNavigationSkuUserToken(java.lang.String)
com.mapbox.mapboxsdk.offline.OfflineManager: void runPackDatabaseAutomatically(boolean)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setSignValue(java.lang.String)
com.mapbox.mapboxsdk.log.Logger: void d(java.lang.String,java.lang.String,java.lang.Throwable)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextOpacity()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.mapbox.mapboxsdk.style.layers.Layer: java.lang.String nativeGetSourceId()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
com.mapbox.geojson.Point: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
com.google.android.material.button.MaterialButton: void setElevation(float)
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void releaseThreads()
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: void finalize()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
com.mapbox.geojson.Polygon: java.util.List coordinates()
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: ListofListofListOfPointCoordinatesTypeAdapter()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.mapbox.mapboxsdk.utils.StringUtils: java.lang.String unaccent(java.lang.String)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void nativeSetHeatmapIntensityTransition(long,long)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.google.gson.JsonPrimitive: boolean isBoolean()
com.google.android.material.chip.Chip: float getTextStartPadding()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
com.mapbox.mapboxsdk.style.layers.RasterLayer: void initialize(java.lang.String,java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setClazz(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeature(com.mapbox.geojson.Feature)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconOpacity()
com.mapbox.mapboxsdk.style.sources.Source: void setDetached()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.mapbox.android.telemetry.AppUserTurnstile: AppUserTurnstile(android.os.Parcel)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: double getMaxZoom()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.geojson.Point: java.lang.String type()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetAccuracyRadiusTransition()
com.mapbox.mapboxsdk.style.light.Light: void nativeSetColorTransition(long,long)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeResetPosition()
com.mapbox.mapboxsdk.log.Logger: void d(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.cardview.widget.CardView: void setCardElevation(float)
com.mapbox.mapboxsdk.http.NativeHttpRequest: long access$100(com.mapbox.mapboxsdk.http.NativeHttpRequest)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.mapbox.geojson.constants.GeoJsonConstants: GeoJsonConstants()
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddLayerAbove(long,java.lang.String)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.mapbox.android.telemetry.Event$Type: com.mapbox.android.telemetry.Event$Type[] values()
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleStrokeOpacityTransition(long,long)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$DepthStencilFormat: com.mapbox.mapboxsdk.maps.renderer.egl.EGLConfigChooser$DepthStencilFormat valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: FloatingActionButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)
com.google.android.material.card.MaterialCardView: void setProgress(float)
com.google.android.material.button.MaterialButton: int getIconGravity()
com.google.gson.JsonArray: void add(java.lang.Number)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetTextHaloColorTransition()
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.GeometryCollection fromJson(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: java.lang.String toString()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.mapbox.mapboxsdk.log.Logger: Logger()
com.mapbox.mapboxsdk.style.light.Light: void nativeSetColor(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: boolean isPluggedIn()
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.mapbox.geojson.Polygon: com.mapbox.geojson.Polygon fromOuterInner(com.mapbox.geojson.LineString,java.util.List)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
androidx.constraintlayout.widget.Barrier: int getType()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLngLats(double[][][])
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLocationTransition()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
com.mapbox.mapboxsdk.style.layers.FillLayer: FillLayer(long)
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleStrokeColorTransition()
com.mapbox.android.telemetry.LocationEvent: java.lang.String getSource()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.mapbox.geojson.utils.PolylineUtils: PolylineUtils()
com.mapbox.geojson.shifter.CoordinateShifterManager$1: java.util.List shiftLonLat(double,double)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextHaloBlurTransition(long,long)
com.mapbox.geojson.LineString: java.lang.Object coordinates()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void nativeSetLocationTransition(long,long)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Number)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.mapbox.mapboxsdk.style.sources.Source: void setVolatile(java.lang.Boolean)
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.preference.PreferenceScreen: PreferenceScreen(android.content.Context,android.util.AttributeSet)
com.mapbox.android.telemetry.Attachment: com.mapbox.android.telemetry.Event$Type obtainType()
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLineString(com.mapbox.geojson.LineString)
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getStrokeWidth()
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.mapbox.mapboxsdk.style.types.Formatted: java.lang.String toString()
hamza.dali.flutter_osm_plugin.utilities.Constants$PositionMarker: hamza.dali.flutter_osm_plugin.utilities.Constants$PositionMarker valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: java.lang.String getOrientation()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void nativeSetHillshadeAccentColorTransition(long,long)
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillTranslateTransition(long,long)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetHillshadeHighlightColorTransition()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolZOrder()
com.mapbox.geojson.shifter.CoordinateShifterManager: boolean isUsingDefaultShifter()
com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature[] values()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: HillshadeLayer(long)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.squareup.picasso.Picasso$Priority: com.squareup.picasso.Picasso$Priority valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
com.mapbox.geojson.LineString: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetPrefetchZoomDelta(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.google.android.material.chip.ChipGroup: int getChipCount()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeResetNorth()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetShadowImageSizeTransition()
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconTranslateAnchor()
com.mapbox.mapboxsdk.offline.OfflineManager: void nativeCancelPrefetchAmbientCacheRequest(long)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
com.mapbox.geojson.BoundingBox: BoundingBox(com.mapbox.geojson.Point,com.mapbox.geojson.Point)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetGestureInProgress(boolean)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.maps.widgets.CompassView: int getCompassImageResource()
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Number)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.geometry.ProjectedMeters nativeProjectedMetersForLatLng(double,double)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.mapbox.geojson.utils.PolylineUtils: double getSqSegDist(com.mapbox.geojson.Point,com.mapbox.geojson.Point,com.mapbox.geojson.Point)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String getCreated()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSubscribe(com.mapbox.mapboxsdk.maps.Observer,int,java.lang.String[])
com.mapbox.geojson.LineString: LineString(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String nativeGetAttribution()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.mapbox.android.telemetry.LocationEvent: java.lang.Float getAccuracy()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.types.FormattedSection: void setTextColor(java.lang.Object)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineWidth()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void setState(int)
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.mapbox.mapboxsdk.maps.Value: Value(double)
org.osmdroid.views.MapView: float getMapScale()
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineColorTransition(long,long)
androidx.preference.PreferenceCategory: PreferenceCategory(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory$1: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.style.layers.RasterLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetRasterBrightnessMaxTransition()
com.mapbox.geojson.gson.GeoJsonAdapterFactory: GeoJsonAdapterFactory()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineGradient()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetBearing(double,long)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromPolyline(java.lang.String,int)
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleColor()
com.mapbox.geojson.ListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.List)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.mapbox.geojson.GeoJson: com.mapbox.geojson.BoundingBox bbox()
com.squareup.moshi.JsonReader$Token: com.squareup.moshi.JsonReader$Token[] values()
androidx.preference.Preference: Preference(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.Mapbox: void initializeTelemetry()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: int describeContents()
com.mapbox.mapboxsdk.maps.NativeMapView: double nativeGetZoom()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterBrightnessMaxTransition(long,long)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
com.mapbox.mapboxsdk.style.sources.ImageSource: void nativeSetImage(android.graphics.Bitmap)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
com.mapbox.geojson.shifter.CoordinateShifterManager$1: java.util.List unshiftPoint(com.mapbox.geojson.Point)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: int getBatteryLevel()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
org.osmdroid.views.MapView: void setMapListener(org.osmdroid.events.MapListener)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextTranslateTransition(long,long)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.mapbox.mapboxsdk.maps.widgets.CompassView: void setEnabled(boolean)
com.mapbox.geojson.BoundingBox: int hashCode()
com.google.gson.JsonArray: void addAll(com.google.gson.JsonArray)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.mapbox.mapboxsdk.style.layers.LineLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetLineColorTransition()
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
com.mapbox.mapboxsdk.maps.renderer.MapRendererScheduler: void requestRender()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.log.Logger: void e(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconOpacityTransition(long,long)
com.squareup.picasso.MemoryPolicy: com.squareup.picasso.MemoryPolicy[] values()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconColor()
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: void finalize()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.mapbox.geojson.utils.PolylineUtils: java.util.List simplify(java.util.List,boolean)
androidx.preference.SeekBarPreference: SeekBarPreference(android.content.Context,android.util.AttributeSet)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: int describeContents()
com.mapbox.mapboxsdk.style.layers.CannotAddLayerException: CannotAddLayerException(java.lang.String)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
com.mapbox.android.telemetry.AppStateUtils$AppState: com.mapbox.android.telemetry.AppStateUtils$AppState valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.FillExtrusionLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillExtrusionOpacityTransition()
com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void setNumberOfTilesCompleted(long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.mapbox.geojson.MultiLineString: MultiLineString(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetStyleUrl(java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: void setAccessibilityFontScale(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.mapbox.mapboxsdk.geometry.ProjectedMeters: ProjectedMeters(double,double)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.osmdroid.views.MapView: void setInitCenter(org.osmdroid.api.IGeoPoint)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddSource(com.mapbox.mapboxsdk.style.sources.Source,long)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.mapbox.mapboxsdk.style.sources.RasterDemSource: void initialize(java.lang.String,java.lang.Object,int)
org.osmdroid.views.MapView: int getZoomLevel()
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.mapbox.mapboxsdk.maps.widgets.CompassView: android.graphics.drawable.Drawable getCompassImage()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: void setRenderMode(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconAnchor()
com.mapbox.mapboxsdk.style.sources.CannotAddSourceException: CannotAddSourceException(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.gson.TypeAdapter: java.lang.String toJson(java.lang.Object)
androidx.appcompat.widget.SwitchCompat: void setFilters(android.text.InputFilter[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onStyleImageMissing(java.lang.String)
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillTranslateAnchor()
org.osmdroid.views.MapView: void setTilesScaleFactor(float)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.google.android.material.chip.Chip: void setMaxWidth(int)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetBearingImageSizeTransition()
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
com.google.gson.TypeAdapter: com.google.gson.JsonElement toJsonTree(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.mapbox.geojson.MultiPolygon: int hashCode()
com.mapbox.mapboxsdk.maps.NativeMapView: boolean nativeRemoveLayer(long)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.mapbox.mapboxsdk.style.layers.RasterLayer: java.lang.Object nativeGetRasterContrast()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Integer getMaxOverscaleFactorForParentTiles()
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.String)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
com.mapbox.geojson.Feature: com.mapbox.geojson.Geometry geometry()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: float getAccessibilityFontScale()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetTopImage()
com.google.gson.JsonObject: com.google.gson.JsonObject deepCopy()
com.mapbox.geojson.MultiLineString: boolean equals(java.lang.Object)
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: java.lang.String getShapeForOfflineRegion()
com.google.gson.TypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.mapbox.mapboxsdk.http.NativeHttpRequest: void access$200(com.mapbox.mapboxsdk.http.NativeHttpRequest,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[])
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
com.mapbox.android.accounts.v1.MapboxAccounts: long getNow()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetPitch(double,long)
com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility: com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void onWillStartRenderingFrame()
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Integer getPrefetchZoomDelta()
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLngLats(java.util.List)
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromJson(java.lang.String)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.geometry.LatLng nativeLatLngForProjectedMeters(double,double)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeInitialize(com.mapbox.mapboxsdk.snapshotter.MapSnapshotter,com.mapbox.mapboxsdk.storage.FileSource,float,int,int,java.lang.String,java.lang.String,com.mapbox.mapboxsdk.geometry.LatLngBounds,com.mapbox.mapboxsdk.camera.CameraPosition,boolean,int,java.lang.String)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconRotationAlignment()
com.mapbox.geojson.FeatureCollection$GsonTypeAdapter: com.mapbox.geojson.FeatureCollection read(com.google.gson.stream.JsonReader)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
com.mapbox.mapboxsdk.module.telemetry.MapBaseEvent: java.lang.String getCreated()
androidx.appcompat.widget.SwitchCompat: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void initialize(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent$2: PerformanceEvent$2(com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.mapbox.mapboxsdk.annotations.BubbleLayout: com.mapbox.mapboxsdk.annotations.ArrowDirection getArrowDirection()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.sources.Source: java.lang.String getId()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetPrefetchTiles(boolean)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeHighlightColor()
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.Object[] toArray()
com.google.gson.reflect.TypeToken: int hashCode()
com.mapbox.geojson.Point: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.mapbox.geojson.BoundingBox: java.lang.String toJson()
com.mapbox.mapboxsdk.style.types.FormattedSection: void setTextColor(int)
com.google.android.material.chip.Chip: float getCloseIconSize()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.mapbox.mapboxsdk.maps.MapView: void setMaximumFps(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
androidx.preference.DropDownPreference: DropDownPreference(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.Mapbox: java.lang.String getAccessToken()
com.mapbox.android.telemetry.LocationEvent: void setAccuracy(java.lang.Float)
com.mapbox.android.telemetry.AppUserTurnstile: AppUserTurnstile(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.style.sources.Source: void nativeSetMinimumTileUpdateInterval(java.lang.Long)
com.mapbox.mapboxsdk.style.layers.Layer: Layer(long)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLinePatternTransition(long,long)
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: void initialize(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
org.osmdroid.views.MapView: org.osmdroid.views.overlay.TilesOverlay getMapOverlay()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.google.gson.JsonArray: void add(com.google.gson.JsonElement)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: SymbolLayer(long)
com.mapbox.geojson.Polygon$GsonTypeAdapter: com.mapbox.geojson.Polygon read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void nativeRender()
com.mapbox.mapboxsdk.style.layers.Layer: float nativeGetMinZoom()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.style.sources.Source[] nativeGetSources()
com.mapbox.geojson.LineString: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineBlur()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: PhoneState$Orientation(java.lang.String,int,java.lang.String)
com.google.gson.JsonObject: boolean equals(java.lang.Object)
com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: java.lang.String getCellularNetworkType()
com.mapbox.geojson.Feature: void addCharacterProperty(java.lang.String,java.lang.Character)
com.mapbox.mapboxsdk.annotations.BubbleLayout: float getArrowHeight()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetTextColorTransition(long,long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.mapbox.geojson.MultiPolygon$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.Object)
com.mapbox.mapboxsdk.style.layers.CircleLayer: void nativeSetCircleBlurTransition(long,long)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.camera.CameraPosition nativeGetCameraForGeometry(com.mapbox.geojson.Geometry,double,double,double,double,double,double)
com.google.gson.JsonArray: JsonArray(int)
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromPolygons(java.util.List)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetSymbolAvoidEdges()
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void disableTelemetrySession()
com.google.gson.JsonArray: long getAsLong()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float getAccessibilityFontScale()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextOffset()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getCarrier()
com.mapbox.geojson.Polygon$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.mapbox.geojson.Point$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.style.layers.FillLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetFillOutlineColorTransition()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetIconIgnorePlacement()
com.mapbox.geojson.GeometryCollection: int hashCode()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeCancel()
com.mapbox.mapboxsdk.style.layers.HillshadeLayer: java.lang.Object nativeGetHillshadeShadowColor()
com.mapbox.mapboxsdk.offline.OfflineRegion: void initialize(long,com.mapbox.mapboxsdk.storage.FileSource)
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.mapbox.mapboxsdk.maps.ObservableEvent: java.lang.String toString()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillAntialias()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.mapbox.mapboxsdk.style.layers.FillLayer: java.lang.Object nativeGetFillSortKey()
org.osmdroid.views.MapView: android.widget.Scroller getScroller()
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: int getRenderMode()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: void nativeSetIconHaloColorTransition(long,long)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: int describeContents()
com.mapbox.geojson.exception.GeoJsonException: GeoJsonException(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.geometry.LatLngBoundsZoom: LatLngBoundsZoom(double,double,double,double,double)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.String getClazz()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.mapbox.geojson.MultiLineString: com.mapbox.geojson.MultiLineString fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
com.mapbox.geojson.GeometryCollection: GeometryCollection(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
com.mapbox.geojson.GeometryCollection$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.JsonArray: boolean remove(com.google.gson.JsonElement)
com.google.gson.JsonPrimitive: boolean isNumber()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadEndEvent: void setSizeOfResourcesCompleted(long)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromJson(java.lang.String)
com.mapbox.mapboxsdk.geometry.LatLngBounds: LatLngBounds(double,double,double,double)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetImageTiltDisplacement()
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.mapbox.geojson.Feature: boolean hasProperty(java.lang.String)
com.google.gson.reflect.TypeToken: boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
androidx.window.core.SpecificationComputer$VerificationMode: androidx.window.core.SpecificationComputer$VerificationMode valueOf(java.lang.String)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: void setStyleURL(java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
com.mapbox.mapboxsdk.storage.FileSource: void activate()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String,java.lang.Number)
com.mapbox.mapboxsdk.style.sources.Source: void nativeSetPrefetchZoomDelta(java.lang.Integer)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.gson.JsonArray: java.math.BigInteger getAsBigInteger()
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleColorTransition()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.mapbox.mapboxsdk.style.layers.CircleLayer: java.lang.Object nativeGetCircleBlur()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void initialize(java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setDebugLoggingEnabled(boolean)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeAddImage(java.lang.String,android.graphics.Bitmap,float,boolean)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeUpdateMarker(long,double,double,java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.google.gson.TypeAdapter: TypeAdapter()
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: boolean setSessionIdRotationInterval(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: void writeToParcel(android.os.Parcel,int)
com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback: void onMerge(com.mapbox.mapboxsdk.offline.OfflineRegion[])
com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation: com.mapbox.mapboxsdk.module.telemetry.PhoneState$Orientation valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void finalize()
com.mapbox.mapboxsdk.style.sources.Source: java.lang.Integer nativeGetMaxOverscaleFactorForParentTiles()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
com.mapbox.geojson.LineString$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.LineString)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.mapbox.mapboxsdk.maps.MapView: MapView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getModel()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.mapbox.mapboxsdk.location.LocationIndicatorLayer: java.lang.Object nativeGetBearing()
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeTakeSnapshot()
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.mapbox.geojson.gson.GeometryGeoJson: com.mapbox.geojson.Geometry fromJson(java.lang.String)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String)
com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)
com.mapbox.mapboxsdk.style.sources.UnknownSource: void initialize()
com.mapbox.mapboxsdk.style.types.FormattedSection: java.lang.Number getFontScale()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.mapbox.geojson.Feature: void addNumberProperty(java.lang.String,java.lang.Number)
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: float getPixelRatio()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextRadialOffset()
com.mapbox.mapboxsdk.style.layers.Layer: void nativeSetFilter(java.lang.Object[])
com.mapbox.geojson.BaseCoordinatesTypeAdapter: void writePoint(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Point)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.mapbox.mapboxsdk.storage.FileSource$ResourceTransformCallback: java.lang.String onURL(int,java.lang.String)
com.mapbox.geojson.FeatureCollection: java.lang.String toJson()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapRadius()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.mapbox.geojson.MultiPolygon: java.lang.String type()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.mapbox.mapboxsdk.module.telemetry.PhoneState: int getBatteryLevel()
com.mapbox.geojson.MultiPolygon: com.mapbox.geojson.MultiPolygon fromLngLats(double[][][][])
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.types.FormattedSection: FormattedSection(java.lang.String,java.lang.String[])
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
com.mapbox.mapboxsdk.net.NativeConnectivityListener: void nativeOnConnectivityStateChanged(boolean)
com.mapbox.mapboxsdk.maps.renderer.MapRendererRunnable: void nativeInitialize()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.mapbox.mapboxsdk.maps.Value: Value(java.lang.Object)
com.mapbox.geojson.Polygon$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Polygon)
com.mapbox.geojson.PointAsCoordinatesTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
com.mapbox.geojson.ListOfDoublesCoordinatesTypeAdapter: ListOfDoublesCoordinatesTypeAdapter()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void nativeAddLayerAt(long,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.mapbox.mapboxsdk.style.layers.LineLayer: void nativeSetLineOffsetTransition(long,long)
com.mapbox.mapboxsdk.style.layers.FillLayer: void nativeSetFillPatternTransition(long,long)
com.mapbox.mapboxsdk.module.telemetry.PhoneState: float obtainDisplayDensity(android.content.Context)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapWeight()
com.mapbox.geojson.Feature$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,com.mapbox.geojson.Feature)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.google.gson.JsonArray: char getAsCharacter()
com.mapbox.mapboxsdk.snapshotter.MapSnapshotter: void onDidFailLoadingStyle(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.preference.MultiSelectListPreference: MultiSelectListPreference(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: int getIconPadding()
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.mapbox.mapboxsdk.module.telemetry.OfflineDownloadStartEvent: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.google.gson.reflect.TypeToken: TypeToken(java.lang.reflect.Type)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.mapbox.mapboxsdk.maps.NativeMapView: void onDidBecomeIdle()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.mapbox.android.telemetry.AppStateUtils$ActivityState: com.mapbox.android.telemetry.AppStateUtils$ActivityState[] values()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.mapbox.mapboxsdk.maps.MapView: android.view.View getRenderView()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.mapbox.geojson.MultiLineString: java.util.List lineStrings()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.mapbox.mapboxsdk.storage.FileSource: void finalize()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: java.lang.Double readDoubleIfNotNull(android.os.Parcel)
com.mapbox.geojson.FeatureCollection: com.mapbox.geojson.FeatureCollection fromFeatures(com.mapbox.geojson.Feature[],com.mapbox.geojson.BoundingBox)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.mapbox.geojson.FeatureCollection: FeatureCollection(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void nativeInvalidateBounds(com.mapbox.mapboxsdk.geometry.LatLngBounds)
com.mapbox.geojson.MultiLineString$GsonTypeAdapter: MultiLineString$GsonTypeAdapter(com.google.gson.Gson)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.preference.internal.PreferenceImageView: void setMaxHeight(int)
com.mapbox.geojson.Feature: int hashCode()
com.mapbox.android.telemetry.Attachment: Attachment(android.os.Parcel)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getOperatingSystem()
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
androidx.appcompat.widget.SwitchCompat: void setAllCaps(boolean)
com.mapbox.geojson.Point: double longitude()
com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion: com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion valueOf(java.lang.String)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: void finalize()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getEventName()
com.mapbox.android.telemetry.VisionObjectDetectionEvent: void setObjectPositionHeight(double)
com.mapbox.mapboxsdk.offline.OfflineRegion: void setOfflineRegionObserver(com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver)
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: void setDetachedListener(com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView$OnGLSurfaceViewDetachedListener)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromGeometry(com.mapbox.geojson.Geometry,com.google.gson.JsonObject,java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLinePattern()
com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver: void mapboxTileCountLimitExceeded(long)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getOrientation()
com.mapbox.mapboxsdk.style.sources.CustomGeometrySource: void initialize(java.lang.String,java.lang.Object)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: com.mapbox.android.telemetry.Event$Type obtainType()
com.google.android.material.chip.Chip: void setChipIconSize(float)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.mapbox.mapboxsdk.style.layers.FillLayer: void initialize(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.maps.renderer.glsurfaceview.MapboxGLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView$EGLContextFactory)
com.mapbox.mapboxsdk.style.sources.GeoJsonSource: void nativeSetFeature(com.mapbox.geojson.Feature)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory: com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
com.mapbox.geojson.LineString: com.mapbox.geojson.LineString fromLngLats(java.util.List,com.mapbox.geojson.BoundingBox)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.mapbox.android.core.permissions.PermissionsManager$AccuracyAuthorization: com.mapbox.android.core.permissions.PermissionsManager$AccuracyAuthorization valueOf(java.lang.String)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.mapbox.geojson.MultiPoint: java.util.List coordinates()
com.google.gson.JsonArray: boolean getAsBoolean()
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
com.mapbox.geojson.Feature: boolean hasNonNullValueForProperty(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.mapbox.android.telemetry.Attachment: Attachment()
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.mapbox.mapboxsdk.offline.OfflineRegionDefinition: java.lang.String getType()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.mapbox.geojson.MultiPoint$GsonTypeAdapter: com.mapbox.geojson.CoordinateContainer createCoordinateContainer(java.lang.String,com.mapbox.geojson.BoundingBox,java.util.List)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeUpdatePolygon(long,com.mapbox.mapboxsdk.annotations.Polygon)
com.mapbox.mapboxsdk.style.layers.LineLayer: java.lang.Object nativeGetLineJoin()
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.mapbox.mapboxsdk.offline.OfflineRegion: void getOfflineRegionStatus(com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionStatusCallback)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.mapbox.android.telemetry.VisionObjectDetectionEvent: double getVehicleLatitude()
com.mapbox.geojson.GeometryCollection: com.mapbox.geojson.BoundingBox bbox()
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: HeatmapLayer(long)
org.osmdroid.views.MapView: void setProjection(org.osmdroid.views.Projection)
org.osmdroid.views.MapView: org.osmdroid.util.BoundingBox getBoundingBox()
com.mapbox.geojson.ListofListofListOfPointCoordinatesTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeOnLowMemory()
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.mapbox.mapboxsdk.module.telemetry.MapLoadEvent: java.lang.String getCellularNetworkType()
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.mapbox.geojson.LineString: java.lang.String toString()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.mapbox.mapboxsdk.style.layers.SymbolLayer: java.lang.Object nativeGetTextAnchor()
com.mapbox.mapboxsdk.style.layers.CircleLayer: com.mapbox.mapboxsdk.style.layers.TransitionOptions nativeGetCircleTranslateTransition()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
com.mapbox.geojson.Feature: com.mapbox.geojson.Feature fromJson(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.mapbox.geojson.Feature$GsonTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.mapbox.mapboxsdk.storage.FileSource: void deactivate()
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double,double,double,com.mapbox.geojson.BoundingBox)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.mapbox.mapboxsdk.style.layers.BackgroundLayer: void nativeSetBackgroundOpacityTransition(long,long)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.gson.JsonPrimitive: boolean isString()
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: void onPause()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.mapbox.mapboxsdk.maps.renderer.MapRenderer: MapRenderer(android.content.Context,com.mapbox.mapboxsdk.maps.GlyphsRasterizationMode,java.lang.String)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.mapbox.mapboxsdk.storage.FileSource: void initialize(java.lang.String,java.lang.String)
com.mapbox.mapboxsdk.module.telemetry.MapEventFactory: com.mapbox.mapboxsdk.module.telemetry.PerformanceEvent buildPerformanceEvent(com.mapbox.mapboxsdk.module.telemetry.PhoneState,java.lang.String,android.os.Bundle)
com.mapbox.mapboxsdk.maps.NativeMapView: void nativeSetStyleJson(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.mapbox.mapboxsdk.style.layers.HeatmapLayer: java.lang.Object nativeGetHeatmapIntensity()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.io.Reader)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
com.mapbox.geojson.Feature: com.google.gson.TypeAdapter typeAdapter(com.google.gson.Gson)
com.google.gson.JsonPrimitive: char getAsCharacter()
com.mapbox.mapboxsdk.style.layers.RasterLayer: void nativeSetRasterSaturationTransition(long,long)
com.mapbox.geojson.Point: com.mapbox.geojson.Point fromLngLat(double,double,com.mapbox.geojson.BoundingBox)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.mapbox.mapboxsdk.maps.NativeMapView: com.mapbox.mapboxsdk.geometry.LatLng nativeLatLngForPixel(float,float)
com.mapbox.mapboxsdk.maps.NativeMapView: long[] nativeAddPolygons(com.mapbox.mapboxsdk.annotations.Polygon[])
com.mapbox.geojson.Feature: Feature(java.lang.String,com.mapbox.geojson.BoundingBox,java.lang.String,com.mapbox.geojson.Geometry,com.google.gson.JsonObject)
